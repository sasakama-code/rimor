{
  "overallMetrics": {
    "totalTestCases": 1,
    "analyzedTestCases": 1,
    "inference": {
      "automaticInferenceRate": 1,
      "inferenceAccuracy": 1,
      "inferenceFailed": 0
    },
    "detection": {
      "truePositives": 0,
      "falsePositives": 2,
      "trueNegatives": 3,
      "falseNegatives": 0,
      "precision": 0,
      "recall": 0,
      "f1Score": 0,
      "falsePositiveRate": 1,
      "falseNegativeRate": 0
    },
    "typeSystem": {
      "typeInferenceSuccessRate": 1,
      "taintTrackingAccuracy": 0,
      "invariantVerificationRate": 0
    },
    "performance": {
      "averageAnalysisTime": 0,
      "targetAchievementRate": 1,
      "throughput": 0
    }
  },
  "perTestCaseResults": [
    {
      "testCase": {
        "name": "E2EAuthTest",
        "file": "/test/e2e-auth.test.ts",
        "content": "\n            describe('E2E Authentication Tests', () => {\n              it('should perform complete auth flow', async () => {\n                const credentials = { username: 'admin', password: 'secret123' };\n                const loginResult = await authService.login(credentials);\n                expect(loginResult.token).toBeDefined();\n                \n                const protectedData = await api.getProtectedData(loginResult.token);\n                expect(protectedData).toBeDefined();\n              });\n\n              it('should handle auth failure', async () => {\n                const invalidCredentials = { username: 'hacker', password: 'wrong' };\n                await expect(authService.login(invalidCredentials)).rejects.toThrow();\n              });\n            });\n          ",
        "metadata": {
          "framework": "express",
          "language": "typescript",
          "lastModified": "2025-07-26T07:11:13.688Z"
        }
      },
      "groundTruth": {
        "testFileId": "/test/e2e-auth.test.ts",
        "methodName": "E2EAuthTest",
        "actualSecurityIssues": [],
        "actualTaintLevels": {},
        "requiredSecurityTests": [],
        "manualVerificationResult": "needs-attention",
        "verifiedBy": "accuracy-evaluation-system",
        "verifiedAt": "2025-07-26T07:11:13.692Z"
      },
      "detectedIssues": [
        {
          "id": "analysis-error-E2E Authentication Tests",
          "severity": "error",
          "type": "missing-sanitizer",
          "message": "解析エラー: Invalid regular expression: /expect(/gi: Unterminated group",
          "location": {
            "file": "/test/e2e-auth.test.ts",
            "line": 2,
            "column": 0
          }
        },
        {
          "id": "analysis-error-should handle auth failure",
          "severity": "error",
          "type": "missing-sanitizer",
          "message": "解析エラー: Invalid regular expression: /expect(/gi: Unterminated group",
          "location": {
            "file": "/test/e2e-auth.test.ts",
            "line": 12,
            "column": 0
          }
        }
      ],
      "accuracy": {
        "correct": false,
        "precision": null,
        "recall": null,
        "inferenceSuccessful": true
      },
      "analysis": {
        "missedIssues": [],
        "falseAlarms": [
          {
            "id": "analysis-error-E2E Authentication Tests",
            "severity": "error",
            "type": "missing-sanitizer",
            "message": "解析エラー: Invalid regular expression: /expect(/gi: Unterminated group",
            "location": {
              "file": "/test/e2e-auth.test.ts",
              "line": 2,
              "column": 0
            }
          },
          {
            "id": "analysis-error-should handle auth failure",
            "severity": "error",
            "type": "missing-sanitizer",
            "message": "解析エラー: Invalid regular expression: /expect(/gi: Unterminated group",
            "location": {
              "file": "/test/e2e-auth.test.ts",
              "line": 12,
              "column": 0
            }
          }
        ],
        "correctDetections": []
      }
    }
  ],
  "perFrameworkResults": {},
  "issueTypeAnalysis": {},
  "accuracyTrends": [
    {
      "timestamp": "2025-07-26T07:11:13.483Z",
      "metrics": {
        "totalTestCases": 2,
        "analyzedTestCases": 2,
        "inference": {
          "automaticInferenceRate": 1,
          "inferenceAccuracy": 1,
          "inferenceFailed": 0
        },
        "detection": {
          "truePositives": 0,
          "falsePositives": 2,
          "trueNegatives": 8,
          "falseNegatives": 0,
          "precision": 0,
          "recall": 0,
          "f1Score": 0,
          "falsePositiveRate": 1,
          "falseNegativeRate": 0
        },
        "typeSystem": {
          "typeInferenceSuccessRate": 1,
          "taintTrackingAccuracy": 0,
          "invariantVerificationRate": 0
        },
        "performance": {
          "averageAnalysisTime": 0.5,
          "targetAchievementRate": 1,
          "throughput": 2000
        }
      },
      "changes": [
        "accuracy-evaluation-completed"
      ]
    },
    {
      "timestamp": "2025-07-26T07:11:13.503Z",
      "metrics": {
        "totalTestCases": 0,
        "analyzedTestCases": 0,
        "inference": {
          "automaticInferenceRate": 0,
          "inferenceAccuracy": 0,
          "inferenceFailed": 0
        },
        "detection": {
          "truePositives": 0,
          "falsePositives": 0,
          "trueNegatives": 0,
          "falseNegatives": 0,
          "precision": null,
          "recall": null,
          "f1Score": null,
          "falsePositiveRate": 0,
          "falseNegativeRate": 0
        },
        "typeSystem": {
          "typeInferenceSuccessRate": 0,
          "taintTrackingAccuracy": 0,
          "invariantVerificationRate": 0
        },
        "performance": {
          "averageAnalysisTime": 0,
          "targetAchievementRate": 1,
          "throughput": 0
        }
      },
      "changes": [
        "accuracy-evaluation-completed"
      ]
    }
  ],
  "recommendedImprovements": [
    {
      "area": "detection",
      "currentValue": 1,
      "targetValue": 0.15,
      "recommendations": [
        "サニタイザー検出ロジックの改善",
        "保守的解析の調整",
        "ホワイトリスト機能の拡充"
      ],
      "estimatedImpact": 0.1,
      "implementationComplexity": "low"
    }
  ]
}
