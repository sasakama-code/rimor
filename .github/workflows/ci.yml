name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=high

    - name: Build TypeScript
      run: npm run build

    - name: Run tests (sharded)
      env:
        NODE_OPTIONS: '--max-old-space-size=2048'
      run: |
        # シャード化テストを並列実行
        npm run test:shard1 &
        PID1=$!
        npm run test:shard2 &
        PID2=$!
        npm run test:shard3 &
        PID3=$!
        
        # 全シャードの完了を待ち、いずれかが失敗したら exit 1
        FAILED=0
        wait $PID1 || FAILED=1
        wait $PID2 || FAILED=1
        wait $PID3 || FAILED=1
        
        if [ $FAILED -eq 1 ]; then
          echo "One or more test shards failed"
          exit 1
        fi

    - name: Run quality check
      run: |
        # Run analysis and capture exit code
        npm run analyze:src || ANALYSIS_EXIT_CODE=$?
        
        # If analysis had warnings/errors, check threshold
        if [ "${ANALYSIS_EXIT_CODE:-0}" -ne 0 ]; then
          echo "::warning::Quality analysis detected issues"
          # Future: Add warning count threshold check here
          # For now, allow warnings but log them
          exit 0
        fi

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build TypeScript for security check
      run: npm run build

    - name: Run security check
      run: npm run security-check

  publish-dry-run:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Test npm package
      run: npm pack --dry-run