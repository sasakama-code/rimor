name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit

    - name: Run lint check
      run: npm run lint
      continue-on-error: true  # MVPÊúüÈñì‰∏≠„ÅØlint„Ç®„É©„Éº„ÅßCI„ÇíÊ≠¢„ÇÅ„Å™„ÅÑ

    - name: Build TypeScript
      run: npm run build

    - name: Run tests
      run: npm test

    - name: Clean test artifacts before analysis
      run: |
        echo "üßπ Cleaning test-generated files..."
        rm -rf src/plugins/generated/
        echo "‚úÖ Cleanup completed"

    - name: Run Rimor self-analysis (REQUIRED)
      run: node dist/index.js analyze ./src --format=json > rimor-results.json

    - name: Upload Rimor results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: rimor-analysis-node-${{ matrix.node-version }}
        path: rimor-results.json

    - name: Quality Gate - Test Coverage Check
      run: |
        echo "üîç Checking quality standards..."
        ISSUES=$(cat rimor-results.json | jq '.summary.issuesFound')
        COVERAGE=$(cat rimor-results.json | jq '.summary.testCoverage')
        echo "üìä Analysis Results:"
        echo "   - Issues found: $ISSUES"
        echo "   - Test coverage: $COVERAGE%"
        
        if [ "$ISSUES" -gt 0 ]; then
          echo "‚ùå QUALITY GATE FAILED: $ISSUES test quality issues found"
          echo "   Please fix all test quality issues before merging"
          cat rimor-results.json | jq '.issues[]'
          exit 1
        fi
        
        if [ "$COVERAGE" -lt 80 ]; then
          echo "‚ùå QUALITY GATE FAILED: Test coverage is $COVERAGE% (minimum: 80%)"
          echo "   Please ensure adequate test coverage before merging"
          exit 1
        fi
        
        echo "‚úÖ QUALITY GATE PASSED: All quality standards met"
        echo "   - Zero test quality issues ‚úÖ"
        echo "   - $COVERAGE% test coverage (‚â•80%) ‚úÖ"

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run comprehensive security check
      run: npm run security-check

    - name: Check for outdated packages
      run: npm outdated || true

  publish-dry-run:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Test npm package
      run: npm pack --dry-run