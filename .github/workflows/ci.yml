name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false  # 全てのNode.jsバージョンでテストを実行（互換性問題の検出のため）
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: |
        npm audit --audit-level=high --json > audit-results.json || true
        npm audit --audit-level=high
    
    - name: Upload audit results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-audit-${{ matrix.node-version }}
        path: audit-results.json

    - name: Build TypeScript
      run: npm run build

    - name: Run tests
      env:
        NODE_OPTIONS: '--max-old-space-size=2048'
      run: npm test

    - name: Upload AI Error Report
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: ai-error-report-${{ matrix.node-version }}
        path: |
          .rimor/reports/test-errors-ai.md
          .rimor/reports/test-errors-ai.json
    - name: Post AI Error Report to PR
      if: failure() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const reportPath = '.rimor/reports/test-errors-ai.md';
          
          if (fs.existsSync(reportPath)) {
            const report = fs.readFileSync(reportPath, 'utf8');
            const truncatedReport = report.length > 65000 
              ? report.substring(0, 65000) + '\n\n... [トランケートされました]'
              : report;
              
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## 🤖 AI Error Report (Node.js ${{ matrix.node-version }})\n\n${truncatedReport}`
            });
          }

    - name: Run quality check
      run: |
        # Run analysis and capture exit code
        npm run analyze:src || ANALYSIS_EXIT_CODE=$?
        
        # If analysis had warnings/errors, check threshold
        if [ "${ANALYSIS_EXIT_CODE:-0}" -ne 0 ]; then
          echo "::warning::Quality analysis detected issues"
          # TODO: Implement proper threshold check
          # For critical issues (exit code > 1), fail the build
          if [ "${ANALYSIS_EXIT_CODE}" -gt 1 ]; then
            echo "::error::Quality analysis detected critical issues"
            exit 1
          fi
          # For warnings (exit code = 1), allow but log them
          exit 0
        fi

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build TypeScript for security check
      run: npm run build

    - name: Run security check
      run: npm run security-check

  publish-dry-run:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Test npm package
      run: npm pack --dry-run
