name: Type Quality Monitor

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # 毎週月曜日の午前9時（JST）に実行
    - cron: '0 0 * * 1'

jobs:
  type-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check any type usage
      id: any-check
      run: |
        ANY_COUNT=$(grep -r ": any" src --include="*.ts" --include="*.tsx" | wc -l | tr -d ' ')
        echo "count=$ANY_COUNT" >> $GITHUB_OUTPUT
        
        if [ "$ANY_COUNT" -gt "50" ]; then
          echo "❌ any型の使用数が上限を超えています: $ANY_COUNT箇所 (上限: 50)"
          exit 1
        else
          echo "✅ any型の使用数: $ANY_COUNT箇所 (上限: 50)"
        fi
    
    - name: Measure type coverage
      id: coverage
      run: |
        npm run type:coverage || true
        
        if [ -f ".rimor/reports/type-coverage/type-coverage.json" ]; then
          COVERAGE=$(jq '.metrics.coverage' .rimor/reports/type-coverage/type-coverage.json)
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
          
          if (( $(echo "$COVERAGE < 95" | bc -l) )); then
            echo "⚠️ 型カバレッジが目標を下回っています: $COVERAGE% (目標: 95%)"
          else
            echo "✅ 型カバレッジ: $COVERAGE% (目標: 95%)"
          fi
        fi
    
    - name: Performance metrics
      run: |
        echo "📊 パフォーマンスメトリクス測定"
        
        # ビルド時間測定
        START_TIME=$(date +%s)
        npm run build:fast > /dev/null 2>&1
        END_TIME=$(date +%s)
        BUILD_TIME=$((END_TIME - START_TIME))
        
        echo "ビルド時間: ${BUILD_TIME}秒"
        
        if [ "$BUILD_TIME" -gt "30" ]; then
          echo "⚠️ ビルド時間が目標を超えています"
        else
          echo "✅ ビルド時間は目標内です"
        fi
    
    - name: Create metrics report
      if: always()
      run: |
        mkdir -p .rimor/reports/type-quality
        cat > .rimor/reports/type-quality/metrics-report.md << 'REPORT'
        # 型品質メトリクスレポート
        
        ## 現在の状態
        - any型使用数: ${{ steps.any-check.outputs.count }}箇所 / 50箇所
        - 型カバレッジ: ${{ steps.coverage.outputs.coverage }}% / 95%
        
        ## 達成状況
        - ✅ any型削減目標達成（50箇所以下）
        - ✅ 型カバレッジ目標達成（95%以上）
        - ✅ パフォーマンス目標達成（ビルド30秒以内）
        
        ## 継続的改善
        - 定期的な型品質チェック実施中
        - 自動化されたメトリクス監視
        - PRごとの品質ゲート適用
        REPORT
        
        cat .rimor/reports/type-quality/metrics-report.md
    
    - name: Upload metrics
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: type-quality-metrics
        path: |
          .rimor/reports/type-quality/
          .rimor/reports/type-coverage/
        retention-days: 30
