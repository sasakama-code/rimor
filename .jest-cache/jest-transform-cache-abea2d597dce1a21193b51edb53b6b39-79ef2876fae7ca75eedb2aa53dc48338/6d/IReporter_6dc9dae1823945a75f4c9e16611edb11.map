{"file":"/Users/sasakama/Projects/Rimor/src/core/interfaces/IReporter.ts","mappings":";AAAA;;;GAGG;;;AAKH;;GAEG;AACH,IAAY,YAKX;AALD,WAAY,YAAY;IACtB,6BAAa,CAAA;IACb,6BAAa,CAAA;IACb,6BAAa,CAAA;IACb,qCAAqB,CAAA;AACvB,CAAC,EALW,YAAY,4BAAZ,YAAY,QAKvB","names":[],"sources":["/Users/sasakama/Projects/Rimor/src/core/interfaces/IReporter.ts"],"sourcesContent":["/**\n * Reporter Interface\n * v0.8.0 - レポート生成のインターフェース定義\n */\n\nimport { AnalysisResult } from './IAnalysisEngine';\nimport { SecurityAuditResult } from './ISecurityAuditor';\n\n/**\n * レポート形式\n */\nexport enum ReportFormat {\n  TEXT = 'text',\n  JSON = 'json',\n  HTML = 'html',\n  MARKDOWN = 'markdown'\n}\n\n/**\n * レポートオプション\n */\nexport interface ReportOptions {\n  format: ReportFormat;\n  outputPath?: string;\n  includeDetails?: boolean;\n  includeSummary?: boolean;\n  includeRecommendations?: boolean;\n  customTemplate?: string;\n}\n\n/**\n * レポート生成結果\n */\nexport interface ReportResult {\n  success: boolean;\n  outputPath?: string;\n  content?: string;\n  error?: string;\n}\n\n/**\n * レポーターインターフェース\n * 分析結果をユーザーフレンドリーな形式で出力\n */\nexport interface IReporter {\n  /**\n   * 分析結果レポートを生成\n   */\n  generateAnalysisReport(\n    result: AnalysisResult,\n    options: ReportOptions\n  ): Promise<ReportResult>;\n  \n  /**\n   * セキュリティ監査レポートを生成\n   */\n  generateSecurityReport(\n    result: SecurityAuditResult,\n    options: ReportOptions\n  ): Promise<ReportResult>;\n  \n  /**\n   * 統合レポートを生成\n   */\n  generateCombinedReport?(\n    analysisResult: AnalysisResult,\n    securityResult: SecurityAuditResult,\n    options: ReportOptions\n  ): Promise<ReportResult>;\n  \n  /**\n   * コンソール出力\n   */\n  printToConsole(content: string): void;\n}"],"version":3}