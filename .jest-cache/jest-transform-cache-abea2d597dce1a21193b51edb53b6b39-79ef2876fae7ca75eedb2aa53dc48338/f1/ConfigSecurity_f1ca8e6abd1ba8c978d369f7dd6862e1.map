{"file":"/Users/sasakama/Projects/Rimor/src/security/ConfigSecurity.ts","mappings":"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","names":[],"sources":["/Users/sasakama/Projects/Rimor/src/security/ConfigSecurity.ts"],"sourcesContent":["/**\n * 設定ファイルセキュリティ - セキュリティ強化 v0.4.1\n * 設定ファイルの安全な読み込み・解析・検証を提供\n */\n\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { PathSecurity } from '../utils/pathSecurity';\nimport { errorHandler, ErrorType } from '../utils/errorHandler';\n\n/**\n * 設定ファイルセキュリティ制限\n */\nexport interface ConfigSecurityLimits {\n  /** 最大ファイルサイズ (bytes) */\n  maxFileSize: number;\n  /** 最大オブジェクト深度 */\n  maxObjectDepth: number;\n  /** 最大プロパティ数 */\n  maxProperties: number;\n  /** 最大配列長 */\n  maxArrayLength: number;\n  /** 最大文字列長 */\n  maxStringLength: number;\n}\n\n/**\n * デフォルトセキュリティ制限\n */\nexport const DEFAULT_CONFIG_SECURITY_LIMITS: ConfigSecurityLimits = {\n  maxFileSize: 512 * 1024, // 512KB\n  maxObjectDepth: 5,\n  maxProperties: 100,\n  maxArrayLength: 50,\n  maxStringLength: 500\n};\n\n/**\n * 設定ファイル検証結果\n */\nexport interface ConfigValidationResult {\n  isValid: boolean;\n  sanitizedConfig?: unknown;\n  errors: string[];\n  warnings: string[];\n  securityIssues: string[];\n}\n\n/**\n * セキュア設定ファイル処理クラス\n */\nexport class ConfigSecurity {\n  private limits: ConfigSecurityLimits;\n\n  constructor(limits: ConfigSecurityLimits = DEFAULT_CONFIG_SECURITY_LIMITS) {\n    this.limits = limits;\n  }\n\n  /**\n   * 設定ファイルの安全な読み込みと検証\n   */\n  async loadAndValidateConfig(configPath: string, projectRoot: string): Promise<ConfigValidationResult> {\n    try {\n      // パス検証\n      if (!PathSecurity.validateProjectPath(configPath, projectRoot)) {\n        return {\n          isValid: false,\n          errors: ['設定ファイルのパスが不正です'],\n          warnings: [],\n          securityIssues: ['パストラバーサル攻撃を検出']\n        };\n      }\n\n      // ファイル存在確認\n      if (!fs.existsSync(configPath)) {\n        return {\n          isValid: false,\n          errors: ['設定ファイルが存在しません'],\n          warnings: [],\n          securityIssues: []\n        };\n      }\n\n      // ファイルサイズチェック\n      const fileStats = fs.statSync(configPath);\n      if (fileStats.size > this.limits.maxFileSize) {\n        return {\n          isValid: false,\n          errors: [`設定ファイルサイズが制限を超過: ${fileStats.size} > ${this.limits.maxFileSize}`],\n          warnings: [],\n          securityIssues: ['DoS攻撃の可能性']\n        };\n      }\n\n      // ファイル読み込み\n      const configContent = fs.readFileSync(configPath, 'utf-8');\n\n      // 内容の前処理セキュリティチェック\n      const preValidation = this.preValidateConfigContent(configContent);\n      if (!preValidation.isValid) {\n        return preValidation;\n      }\n\n      // JSON解析\n      const parseResult = this.secureJsonParse(configContent);\n      if (!parseResult.success) {\n        return {\n          isValid: false,\n          errors: [parseResult.error || 'JSON解析に失敗'],\n          warnings: [],\n          securityIssues: parseResult.securityIssues || []\n        };\n      }\n\n      // 構造検証とサニタイゼーション\n      const validationResult = this.validateAndSanitizeConfig(parseResult.data);\n      \n      // preValidationのsecurityIssuesを結果にマージ\n      if (preValidation.securityIssues && preValidation.securityIssues.length > 0) {\n        validationResult.securityIssues = [\n          ...validationResult.securityIssues,\n          ...preValidation.securityIssues\n        ];\n      }\n      \n      // parseResultのsecurityIssuesを結果にマージ\n      if (parseResult.securityIssues && parseResult.securityIssues.length > 0) {\n        validationResult.securityIssues = [\n          ...validationResult.securityIssues,\n          ...parseResult.securityIssues\n        ];\n      }\n      \n      // preValidationのwarningsも結果にマージ\n      if (preValidation.warnings && preValidation.warnings.length > 0) {\n        validationResult.warnings = [\n          ...validationResult.warnings,\n          ...preValidation.warnings\n        ];\n      }\n      \n      return validationResult;\n\n    } catch (error) {\n      errorHandler.handleError(\n        error,\n        ErrorType.INVALID_CONFIG,\n        '設定ファイルの読み込み中にエラーが発生しました',\n        { configPath }\n      );\n\n      return {\n        isValid: false,\n        errors: [error instanceof Error ? error.message : '不明なエラー'],\n        warnings: [],\n        securityIssues: []\n      };\n    }\n  }\n\n  /**\n   * 設定ファイル内容の事前検証\n   */\n  private preValidateConfigContent(content: string): ConfigValidationResult {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n    const securityIssues: string[] = [];\n\n    // 基本検証\n    if (!content || content.trim().length === 0) {\n      errors.push('設定ファイルが空です');\n      return { isValid: false, errors, warnings, securityIssues };\n    }\n\n    if (content.length > this.limits.maxFileSize) {\n      errors.push('設定ファイルの内容が大きすぎます');\n      securityIssues.push('DoS攻撃の可能性');\n      return { isValid: false, errors, warnings, securityIssues };\n    }\n\n    // 危険なパターンの詳細検出\n    const criticalPatterns = [\n      { pattern: /__proto__\\s*:/gi, issue: 'プロトタイプ汚染攻撃' },\n      { pattern: /constructor\\s*:/gi, issue: 'コンストラクタ汚染攻撃' },\n      { pattern: /prototype\\s*:/gi, issue: 'プロトタイプ操作攻撃' },\n      { pattern: /function\\s*\\(/gi, issue: '任意関数実行攻撃' },\n      { pattern: /eval\\s*\\(/gi, issue: 'eval実行攻撃' },\n      { pattern: /require\\s*\\(/gi, issue: '任意モジュール読み込み攻撃' },\n      { pattern: /import\\s*\\(/gi, issue: '動的import攻撃' },\n      { pattern: /process\\./gi, issue: 'プロセス操作攻撃' },\n      { pattern: /global\\./gi, issue: 'グローバル変数操作攻撃' },\n      { pattern: /child_process/gi, issue: 'コマンド実行攻撃' },\n      { pattern: /fs\\./gi, issue: 'ファイルシステム攻撃' },\n      { pattern: /path\\./gi, issue: 'パス操作攻撃' },\n      { pattern: /\\.\\.\\//g, issue: 'パストラバーサル攻撃' },\n      { pattern: /\\/etc\\/|\\/root\\/|\\/home\\//gi, issue: 'システムディレクトリアクセス攻撃' },\n      { pattern: /\\\\x[0-9a-f]{2}/gi, issue: 'エスケープシーケンス攻撃' },\n      { pattern: /\\\\u[0-9a-f]{4}/gi, issue: 'Unicode攻撃' },\n      { pattern: /document\\.|window\\./gi, issue: 'DOM操作攻撃（環境混在）' }\n    ];\n\n    for (const { pattern, issue } of criticalPatterns) {\n      if (pattern.test(content)) {\n        securityIssues.push(issue);\n        \n        // 重要度に応じてエラーまたは警告に分類\n        if (issue.includes('プロトタイプ') || issue.includes('eval') || issue.includes('実行')) {\n          errors.push(`危険なパターンを検出: ${issue}`);\n        } else {\n          warnings.push(`疑わしいパターンを検出: ${issue}`);\n        }\n      }\n    }\n\n    // 異常に長い行の検出\n    const lines = content.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n      if (lines[i].length > this.limits.maxStringLength) {\n        warnings.push(`異常に長い行を検出: ${i + 1}行目 (${lines[i].length}文字)`);\n        securityIssues.push('データ圧迫攻撃の可能性');\n      }\n    }\n\n    // ネストの深度概算チェック\n    const openBraces = (content.match(/\\{/g) || []).length;\n    const closeBraces = (content.match(/\\}/g) || []).length;\n    \n    if (openBraces !== closeBraces) {\n      errors.push('JSON構造が不正です（括弧の不一致）');\n    }\n\n    if (openBraces > this.limits.maxObjectDepth * 10) {\n      warnings.push('非常に深いネスト構造を検出');\n      securityIssues.push('DoS攻撃（深いネスト）の可能性');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      warnings,\n      securityIssues\n    };\n  }\n\n  /**\n   * セキュアなJSON解析\n   */\n  private secureJsonParse(content: string): { success: boolean; data?: unknown; error?: string; securityIssues?: string[] } {\n    try {\n      // JSON.parseの前にコンテンツをさらに検証\n      const securityIssues: string[] = [];\n\n      // プロトタイプ汚染の具体的防止\n      const cleanedContent = content\n        .replace(/\"__proto__\"\\s*:/gi, '\"__proto_blocked__\":')\n        .replace(/\"constructor\"\\s*:/gi, '\"constructor_blocked__\":')  \n        .replace(/\"prototype\"\\s*:/gi, '\"prototype_blocked__\":');\n\n      if (cleanedContent !== content) {\n        securityIssues.push('プロトタイプ汚染攻撃を無効化');\n      }\n\n      // 安全なJSON解析\n      const parsed = JSON.parse(cleanedContent);\n\n      // 解析後の追加検証\n      const postParseValidation = this.validateParsedObject(parsed, 0);\n      if (!postParseValidation.isValid) {\n        return {\n          success: false,\n          error: postParseValidation.errors.join(', '),\n          securityIssues: [...securityIssues, ...postParseValidation.securityIssues]\n        };\n      }\n\n      return {\n        success: true,\n        data: parsed,\n        securityIssues\n      };\n\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'JSON解析エラー',\n        securityIssues: ['JSON解析攻撃の可能性']\n      };\n    }\n  }\n\n  /**\n   * 解析済みオブジェクトの検証\n   */\n  private validateParsedObject(obj: unknown, depth: number): ConfigValidationResult {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n    const securityIssues: string[] = [];\n\n    // 深度制限チェック\n    if (depth > this.limits.maxObjectDepth) {\n      errors.push(`オブジェクト深度が制限を超過: ${depth} > ${this.limits.maxObjectDepth}`);\n      securityIssues.push('DoS攻撃（深いネスト）');\n      return { isValid: false, errors, warnings, securityIssues };\n    }\n\n    if (obj === null || obj === undefined) {\n      return { isValid: true, errors, warnings, securityIssues };\n    }\n\n    if (Array.isArray(obj)) {\n      // 配列の検証\n      if (obj.length > this.limits.maxArrayLength) {\n        errors.push(`配列長が制限を超過: ${obj.length} > ${this.limits.maxArrayLength}`);\n        securityIssues.push('DoS攻撃（大きな配列）');\n        return { isValid: false, errors, warnings, securityIssues };\n      }\n\n      // 配列要素の再帰検証\n      for (let i = 0; i < obj.length; i++) {\n        const elementValidation = this.validateParsedObject(obj[i], depth + 1);\n        if (!elementValidation.isValid) {\n          errors.push(...elementValidation.errors.map(e => `配列[${i}]: ${e}`));\n          warnings.push(...elementValidation.warnings);\n          securityIssues.push(...elementValidation.securityIssues);\n        }\n      }\n\n    } else if (typeof obj === 'object') {\n      // オブジェクトの検証\n      const objRecord = obj as Record<string, unknown>;\n      const keys = Object.keys(objRecord);\n      \n      if (keys.length > this.limits.maxProperties) {\n        errors.push(`プロパティ数が制限を超過: ${keys.length} > ${this.limits.maxProperties}`);\n        securityIssues.push('DoS攻撃（大きなオブジェクト）');\n        return { isValid: false, errors, warnings, securityIssues };\n      }\n\n      // 危険なプロパティ名の検出\n      const dangerousKeys = keys.filter(key => \n        key === '__proto__' || \n        key === 'constructor' || \n        key === 'prototype' ||\n        key.includes('..') ||\n        key.includes('/') ||\n        key.includes('\\\\')\n      );\n\n      if (dangerousKeys.length > 0) {\n        errors.push(`危険なプロパティ名を検出: ${dangerousKeys.join(', ')}`);\n        securityIssues.push('プロパティ汚染攻撃');\n        return { isValid: false, errors, warnings, securityIssues };\n      }\n\n      // プロパティ値の再帰検証\n      for (const key of keys) {\n        const propValidation = this.validateParsedObject(objRecord[key], depth + 1);\n        if (!propValidation.isValid) {\n          errors.push(...propValidation.errors.map(e => `${key}: ${e}`));\n          warnings.push(...propValidation.warnings);\n          securityIssues.push(...propValidation.securityIssues);\n        }\n      }\n\n    } else if (typeof obj === 'string') {\n      // 文字列の検証\n      if (obj.length > this.limits.maxStringLength) {\n        warnings.push(`文字列長が制限を超過: ${obj.length} > ${this.limits.maxStringLength}`);\n        securityIssues.push('DoS攻撃（長い文字列）');\n      }\n\n      // 危険な文字列パターンの検出\n      const dangerousStringPatterns = [\n        /javascript:/gi,\n        /data:/gi,\n        /vbscript:/gi,\n        /<script/gi,\n        /on\\w+\\s*=/gi,\n        /eval\\s*\\(/gi,\n        /function\\s*\\(/gi\n      ];\n\n      for (const pattern of dangerousStringPatterns) {\n        if (pattern.test(obj)) {\n          warnings.push(`危険な文字列パターンを検出: ${pattern.source}`);\n          securityIssues.push('文字列攻撃の可能性');\n        }\n      }\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      warnings,\n      securityIssues\n    };\n  }\n\n  /**\n   * 設定オブジェクトの検証とサニタイゼーション\n   */\n  private validateAndSanitizeConfig(config: unknown): ConfigValidationResult {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n    const securityIssues: string[] = [];\n\n    try {\n      // ディープクローンで元オブジェクトを保護\n      const sanitizedConfig = JSON.parse(JSON.stringify(config)) as Record<string, unknown>;\n\n      // 基本構造の検証\n      if (!sanitizedConfig || typeof sanitizedConfig !== 'object') {\n        errors.push('設定ファイルはオブジェクト形式である必要があります');\n        return { isValid: false, errors, warnings, securityIssues };\n      }\n\n      // 必須フィールドの存在確認\n      if (!sanitizedConfig.plugins) {\n        sanitizedConfig.plugins = {};\n        warnings.push('pluginsセクションが存在しないため、空のオブジェクトを作成しました');\n      }\n\n      if (!sanitizedConfig.output) {\n        sanitizedConfig.output = { format: 'text', verbose: false };\n        warnings.push('outputセクションが存在しないため、デフォルト値を設定しました');\n      }\n\n      // プラグイン設定の検証\n      if (sanitizedConfig.plugins && typeof sanitizedConfig.plugins === 'object') {\n        for (const [pluginName, pluginConfig] of Object.entries(sanitizedConfig.plugins as Record<string, unknown>)) {\n          // プラグイン名の検証\n          if (!/^[a-zA-Z0-9_-]+$/.test(pluginName)) {\n            errors.push(`不正なプラグイン名: ${pluginName}`);\n            securityIssues.push('プラグイン名攻撃');\n            continue;\n          }\n\n          // プラグイン設定の検証\n          if (!pluginConfig || typeof pluginConfig !== 'object') {\n            errors.push(`プラグイン ${pluginName} の設定が不正です`);\n            continue;\n          }\n\n          const config = pluginConfig as Record<string, unknown>;\n          \n          // 必須フィールドの検証\n          if (typeof config.enabled !== 'boolean') {\n            warnings.push(`プラグイン ${pluginName} のenabled設定をデフォルト値(false)に設定`);\n            config.enabled = false;\n          }\n\n          // excludeFilesの検証\n          if (config.excludeFiles && !Array.isArray(config.excludeFiles)) {\n            warnings.push(`プラグイン ${pluginName} のexcludeFiles設定を削除（配列ではない）`);\n            delete config.excludeFiles;\n          }\n\n          // priorityの検証\n          if (config.priority && (typeof config.priority !== 'number' || config.priority < 0)) {\n            warnings.push(`プラグイン ${pluginName} のpriority設定を削除（不正な値）`);\n            delete config.priority;\n          }\n\n          // システムディレクトリアクセス攻撃の検証\n          const pathProperties = ['outputPath', 'configPath', 'logPath', 'dataPath'];\n          for (const prop of pathProperties) {\n            if (config[prop] && typeof config[prop] === 'string') {\n              const path = config[prop] as string;\n              if (path.includes('/etc/') || path.includes('/root/') || \n                  path.includes('/usr/bin/') || path.includes('/sys/') ||\n                  path.includes('C:\\\\Windows\\\\') || path.includes('C:\\\\Program Files\\\\')) {\n                errors.push(`プラグイン ${pluginName} の ${prop} にシステムディレクトリへのアクセスが含まれています: ${path}`);\n                securityIssues.push('システムディレクトリアクセス攻撃');\n                delete config[prop];\n              }\n            }\n          }\n\n          // 危険なコードの検証（Unicode攻撃含む）\n          const codeProperties = ['command', 'script', 'code', 'exec'];\n          for (const prop of codeProperties) {\n            if (config[prop] && typeof config[prop] === 'string') {\n              const code = config[prop] as string;\n              let codeRemoved = false;\n              \n              // Unicode攻撃の検出（最優先）\n              if (/\\\\u[0-9a-f]{4}/gi.test(code)) {\n                errors.push(`プラグイン ${pluginName} の ${prop} にUnicode攻撃が含まれています: ${code}`);\n                securityIssues.push('Unicode攻撃');\n                delete config[prop];\n                codeRemoved = true;\n              }\n              \n              // その他の危険なパターン（Unicode攻撃が検出されなかった場合のみ）\n              if (!codeRemoved) {\n                const dangerousPatterns = [\n                  /eval\\s*\\(/gi,\n                  /function\\s*\\(/gi,\n                  /require\\s*\\(/gi,\n                  /import\\s*\\(/gi\n                ];\n                \n                for (const pattern of dangerousPatterns) {\n                  if (pattern.test(code)) {\n                    errors.push(`プラグイン ${pluginName} の ${prop} に危険なコードが含まれています: ${code}`);\n                    securityIssues.push('コード実行攻撃');\n                    delete config[prop];\n                    break;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      // excludePatternsの検証\n      if (sanitizedConfig.excludePatterns) {\n        if (!Array.isArray(sanitizedConfig.excludePatterns)) {\n          warnings.push('excludePatternsは配列である必要があります。削除しました。');\n          delete sanitizedConfig.excludePatterns;\n        } else {\n          // パターンの検証とフィルタリング\n          const originalLength = sanitizedConfig.excludePatterns.length;\n          let dangerousPatternCount = 0;\n          \n          const patterns = sanitizedConfig.excludePatterns as unknown[];\n          sanitizedConfig.excludePatterns = patterns.filter((pattern: unknown) => {\n            if (typeof pattern !== 'string') {\n              warnings.push('excludePatternsに文字列以外の値を検出。除外しました。');\n              return false;\n            }\n            \n            if (pattern.length > 200) {\n              warnings.push(`除外パターンが長すぎます: ${pattern.substring(0, 50)}...`);\n              securityIssues.push('DoS攻撃（長いパターン）');\n              return false;\n            }\n\n            if (pattern.includes('..') || pattern.includes('/etc/') || pattern.includes('/root/')) {\n              dangerousPatternCount++;\n              warnings.push(`危険な除外パターンを削除: ${pattern}`);\n              securityIssues.push('パストラバーサル攻撃');\n              return false;\n            }\n\n            return true;\n          });\n\n          // 全パターンが危険な場合はエラーとする\n          if (originalLength > 0 && dangerousPatternCount === originalLength) {\n            errors.push('すべての除外パターンが危険です');\n          }\n        }\n      }\n\n      return {\n        isValid: errors.length === 0,\n        sanitizedConfig,\n        errors,\n        warnings,\n        securityIssues\n      };\n\n    } catch (error) {\n      return {\n        isValid: false,\n        errors: ['設定検証中に予期しないエラーが発生しました'],\n        warnings,\n        securityIssues: ['設定処理攻撃の可能性']\n      };\n    }\n  }\n\n  /**\n   * セキュリティ制限の更新\n   */\n  updateLimits(newLimits: Partial<ConfigSecurityLimits>): void {\n    this.limits = { ...this.limits, ...newLimits };\n  }\n}"],"version":3}