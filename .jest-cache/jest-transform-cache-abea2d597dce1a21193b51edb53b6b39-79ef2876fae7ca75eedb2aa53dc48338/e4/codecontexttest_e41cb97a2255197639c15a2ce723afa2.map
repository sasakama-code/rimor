{"file":"/Users/sasakama/Projects/Rimor/test/analyzers/code-context.test.ts","mappings":"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","names":[],"sources":["/Users/sasakama/Projects/Rimor/test/analyzers/code-context.test.ts"],"sourcesContent":["import { AdvancedCodeContextAnalyzer } from '../../src/analyzers/code-context';\nimport { Issue } from '../../src/core/types';\nimport { AnalysisOptions, ExtractedCodeContext, FunctionInfo, ScopeInfo, VariableInfo, RelatedFileInfo } from '../../src/analyzers/types';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as os from 'os';\n\ndescribe('AdvancedCodeContextAnalyzer', () => {\n  let analyzer: any;\n  let testProjectPath: string;\n\n  beforeEach(() => {\n    analyzer = new AdvancedCodeContextAnalyzer();\n    \n    // テスト用プロジェクトディレクトリを作成\n    testProjectPath = fs.mkdtempSync(path.join(os.tmpdir(), 'rimor-context-test-'));\n    \n    // 複雑なTypeScriptファイルを作成\n    const complexCode = `import { Request, Response } from 'express';\nimport { UserService } from './services/UserService';\nimport * as jwt from 'jsonwebtoken';\n\ninterface UserData {\n  id: number;\n  name: string;\n  email: string;\n}\n\nclass UserController {\n  private userService: UserService;\n  \n  constructor() {\n    this.userService = new UserService();\n  }\n  \n  async getUserById(req: Request, res: Response): Promise<void> {\n    try {\n      const userId = parseInt(req.params.id);\n      const user = await this.userService.findById(userId);\n      \n      if (!user) {\n        res.status(404).json({ error: 'User not found' });\n        return;\n      }\n      \n      res.json(user);\n    } catch (error) {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n  \n  async createUser(req: Request, res: Response): Promise<void> {\n    const { name, email } = req.body;\n    \n    // バリデーションロジック\n    if (!name || !email) {\n      res.status(400).json({ error: 'Name and email are required' });\n      return;\n    }\n    \n    const newUser = await this.userService.create({ name, email });\n    res.status(201).json(newUser);\n  }\n}\n\nexport { UserController };`;\n\n    fs.mkdirSync(path.join(testProjectPath, 'src'), { recursive: true });\n    fs.writeFileSync(path.join(testProjectPath, 'src/UserController.ts'), complexCode);\n    \n    // テストファイルも作成\n    const testCode = `import { UserController } from '../src/UserController';\nimport { Request, Response } from 'express';\n\ndescribe('UserController', () => {\n  let controller: UserController;\n  \n  beforeEach(() => {\n    controller = new UserController();\n  });\n  \n  describe('getUserById', () => {\n    it('should return user data when user exists', async () => {\n      const req = { params: { id: '1' } } as unknown as Request;\n      const res = {\n        json: jest.fn(),\n        status: jest.fn().mockReturnThis()\n      } as unknown as Response;\n      \n      await controller.getUserById(req, res);\n      \n      // Missing proper assertions\n    });\n  });\n});`;\n\n    fs.writeFileSync(path.join(testProjectPath, 'src/UserController.test.ts'), testCode);\n    \n    // 設定ファイル群\n    fs.writeFileSync(path.join(testProjectPath, 'tsconfig.json'), JSON.stringify({\n      compilerOptions: {\n        target: \"es2020\",\n        module: \"commonjs\",\n        strict: true,\n        esModuleInterop: true\n      }\n    }, null, 2));\n    \n    fs.writeFileSync(path.join(testProjectPath, 'package.json'), JSON.stringify({\n      name: 'test-project',\n      dependencies: {\n        'express': '^4.18.0',\n        'jsonwebtoken': '^9.0.0'\n      },\n      devDependencies: {\n        'jest': '^29.0.0',\n        '@types/express': '^4.17.0',\n        '@types/jest': '^29.0.0'\n      }\n    }, null, 2));\n  });\n\n  afterEach(() => {\n    if (fs.existsSync(testProjectPath)) {\n      fs.rmSync(testProjectPath, { recursive: true, force: true });\n    }\n  });\n\n  describe('Class Instantiation', () => {\n    test('should create AdvancedCodeContextAnalyzer instance', () => {\n      expect(analyzer).toBeInstanceOf(AdvancedCodeContextAnalyzer);\n    });\n\n    test('should have required public methods', () => {\n      expect(typeof analyzer.analyzeCodeContext).toBe('function');\n      expect(typeof analyzer.extractFunctionInfo).toBe('function');\n      expect(typeof analyzer.analyzeScopeContext).toBe('function');\n      expect(typeof analyzer.detectRelatedCode).toBe('function');\n    });\n  });\n\n  describe('analyzeCodeContext', () => {\n    test('should analyze TypeScript file and extract comprehensive context', async () => {\n      const issue: Issue = {\n        id: 'test-issue-1',\n        type: 'missing-assertion',\n        severity: 'high',\n        message: 'Missing proper assertions',\n        line: 21,\n        file: path.join(testProjectPath, 'src/UserController.test.ts'),\n        filePath: path.join(testProjectPath, 'src/UserController.test.ts'),\n        category: 'test-quality' as const\n      };\n\n      const options: AnalysisOptions = {\n        includeImports: true,\n        includeExports: true,\n        analyzeFunctions: true,\n        analyzeClasses: true,\n        contextLines: 10\n      };\n\n      const context = await analyzer.analyzeCodeContext(issue, testProjectPath, options);\n\n      expect(context).toBeDefined();\n      expect(context.targetCode.content).toContain('Missing proper assertions');\n      expect(context.imports).toHaveLength(2);\n      expect(context.imports).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({ source: expect.stringContaining('UserController') }),\n          expect.objectContaining({ source: expect.stringContaining('express') })\n        ])\n      );\n      expect(context.functions).toBeDefined();\n      expect(context.classes).toBeDefined();\n      expect(context.scopes).toBeDefined();\n    });\n\n    test('should handle complex TypeScript with classes and interfaces', async () => {\n      const issue: Issue = {\n        id: 'test-issue-2',\n        type: 'missing-error-handling',\n        severity: 'medium', \n        message: 'Missing error handling',\n        line: 20,\n        file: path.join(testProjectPath, 'src/UserController.ts'),\n        filePath: path.join(testProjectPath, 'src/UserController.ts'),\n        category: 'error-handling' as const\n      };\n\n      const options: AnalysisOptions = {\n        includeImports: true,\n        analyzeFunctions: true,\n        analyzeClasses: true,\n        analyzeInterfaces: true\n      };\n\n      const context = await analyzer.analyzeCodeContext(issue, testProjectPath, options);\n\n      expect(context.classes).toHaveLength(1);\n      expect(context.classes[0].name).toBe('UserController');\n      expect(context.classes[0].methods).toContain('getUserById');\n      expect(context.classes[0].methods).toContain('createUser');\n      \n      expect(context.interfaces).toHaveLength(1);\n      expect(context.interfaces[0].name).toBe('UserData');\n      expect(context.interfaces[0].properties).toEqual(\n        expect.arrayContaining(['id', 'name', 'email'])\n      );\n    });\n\n    test('should extract function-level context accurately', async () => {\n      const issue: Issue = {\n        id: 'test-issue-3',\n        type: 'missing-validation',\n        severity: 'medium',\n        message: 'Missing input validation',\n        line: 35,\n        file: path.join(testProjectPath, 'src/UserController.ts'),\n        filePath: path.join(testProjectPath, 'src/UserController.ts'),\n        category: 'validation' as const\n      };\n\n      const context = await analyzer.analyzeCodeContext(issue, testProjectPath, {\n        analyzeFunctions: true,\n        analyzeVariables: true\n      });\n\n      const targetFunction = context.functions.find((f: FunctionInfo) => f.name === 'createUser');\n      expect(targetFunction).toBeDefined();\n      expect(targetFunction!.parameters).toEqual(\n        expect.arrayContaining(['req', 'res'])\n      );\n      expect(targetFunction!.isAsync).toBe(true);\n      expect(targetFunction!.returnType).toBe('Promise<void>');\n    });\n\n    test('should analyze scope context with variable tracking', async () => {\n      const issue: Issue = {\n        id: 'test-issue-4',\n        type: 'unused-variable',\n        severity: 'medium',\n        message: 'Variable may be unused',\n        line: 53,\n        file: path.join(testProjectPath, 'src/UserController.ts'),\n        filePath: path.join(testProjectPath, 'src/UserController.ts'),\n        category: 'code-quality' as const\n      };\n\n      const context = await analyzer.analyzeCodeContext(issue, testProjectPath, {\n        analyzeVariables: true,\n        analyzeScopes: true\n      });\n\n      expect(context.scopes).toBeDefined();\n      expect(context.scopes.length).toBeGreaterThan(0);\n      expect(context.variables).toBeDefined();\n      expect(context.variables.some((v: VariableInfo) => v.name === 'name' || v.name === 'email')).toBe(true);\n    });\n\n    test('should detect related source files', async () => {\n      // 関連するソースファイルを作成\n      const serviceCode = `export class UserService {\n  async findById(id: number) {\n    // Implementation\n  }\n  \n  async create(userData: { name: string; email: string }) {\n    // Implementation\n  }\n}`;\n      \n      fs.mkdirSync(path.join(testProjectPath, 'src/services'), { recursive: true });\n      fs.writeFileSync(path.join(testProjectPath, 'src/services/UserService.ts'), serviceCode);\n\n      const issue: Issue = {\n        id: 'test-issue-5',\n        type: 'missing-test-coverage',\n        severity: 'medium',\n        message: 'Missing test coverage for UserService interaction',\n        line: 18,\n        file: path.join(testProjectPath, 'src/UserController.test.ts'),\n        filePath: path.join(testProjectPath, 'src/UserController.test.ts'),\n        category: 'test-coverage' as const\n      };\n\n      const context = await analyzer.analyzeCodeContext(issue, testProjectPath, {\n        detectRelatedFiles: true,\n        maxRelatedFiles: 5\n      });\n\n      expect(context.relatedFiles).toBeDefined();\n      expect(context.relatedFiles.length).toBeGreaterThan(0);\n      expect(context.relatedFiles.some((f: RelatedFileInfo) => f.path.includes('UserController.ts'))).toBe(true);\n    });\n  });\n\n  describe('extractFunctionInfo', () => {\n    test('should extract detailed function information', async () => {\n      const filePath = path.join(testProjectPath, 'src/UserController.ts');\n      const fileContent = fs.readFileSync(filePath, 'utf-8');\n      \n      const functions = await analyzer.extractFunctionInfo(fileContent, 'typescript');\n\n      expect(functions).toHaveLength(2);\n      \n      const getUserByIdFunc = functions.find((f: FunctionInfo) => f.name === 'getUserById');\n      expect(getUserByIdFunc).toBeDefined();\n      expect(getUserByIdFunc!.isAsync).toBe(true);\n      expect(getUserByIdFunc!.parameters).toEqual(['req', 'res']);\n      expect(getUserByIdFunc!.startLine).toBeGreaterThan(0);\n      expect(getUserByIdFunc!.endLine).toBeGreaterThan(getUserByIdFunc!.startLine);\n    });\n\n    test('should handle different programming languages', async () => {\n      // JavaScriptファイルの作成\n      const jsCode = `function calculateTotal(items) {\n  return items.reduce((sum, item) => sum + item.price, 0);\n}\n\nconst processOrder = async (order) => {\n  const total = calculateTotal(order.items);\n  return { orderId: order.id, total };\n};`;\n\n      fs.writeFileSync(path.join(testProjectPath, 'src/calculator.js'), jsCode);\n      const functions = await analyzer.extractFunctionInfo(jsCode, 'javascript');\n\n      expect(functions).toHaveLength(2);\n      expect(functions.some((f: FunctionInfo) => f.name === 'calculateTotal')).toBe(true);\n      expect(functions.some((f: FunctionInfo) => f.name === 'processOrder')).toBe(true);\n    });\n  });\n\n  describe('analyzeScopeContext', () => {\n    test('should analyze variable scopes correctly', async () => {\n      const code = `function outer() {\n  const outerVar = 'outer';\n  \n  function inner() {\n    const innerVar = 'inner';\n    console.log(outerVar, innerVar);\n  }\n  \n  return inner;\n}`;\n\n      const scopes = await analyzer.analyzeScopeContext(code, 6); // Line with console.log\n\n      expect(scopes).toBeDefined();\n      expect(scopes.length).toBeGreaterThanOrEqual(1);\n      expect(scopes.some((s: ScopeInfo) => s.variables.includes('outerVar'))).toBe(true);\n      expect(scopes.some((s: ScopeInfo) => s.variables.includes('innerVar'))).toBe(true);\n    });\n\n    test('should identify block scopes', async () => {\n      const code = `if (condition) {\n  const blockVar = 'block';\n  let anotherVar = 42;\n}`;\n\n      const scopes = await analyzer.analyzeScopeContext(code, 2);\n\n      expect(scopes).toBeDefined();\n      expect(scopes.length).toBeGreaterThanOrEqual(2); // グローバルとブロック\n      \n      // ブロックスコープを見つける\n      const blockScope = scopes.find((scope: any) => scope.type === 'block');\n      expect(blockScope).toBeDefined();\n      expect(blockScope?.variables).toEqual(\n        expect.arrayContaining(['blockVar', 'anotherVar'])\n      );\n    });\n  });\n\n  describe('detectRelatedCode', () => {\n    test('should find related files based on imports', async () => {\n      const targetFile = path.join(testProjectPath, 'src/UserController.ts');\n      \n      const relatedFiles = await analyzer.detectRelatedCode(targetFile, testProjectPath, {\n        maxRelatedFiles: 10,\n        includeTests: true,\n        includeServices: true\n      });\n\n      expect(relatedFiles).toBeDefined();\n      expect(Array.isArray(relatedFiles)).toBe(true);\n      expect(relatedFiles.some((f: RelatedFileInfo) => f.path.includes('UserController.test.ts'))).toBe(true);\n    });\n\n    test('should analyze dependency relationships', async () => {\n      // 先にservicesディレクトリとUserServiceファイルを作成\n      const serviceCode = `export class UserService {\n  async findById(id: number) {\n    return { id, name: 'Test User', email: 'test@example.com' };\n  }\n  \n  async create(userData: { name: string; email: string }) {\n    return { id: 1, ...userData };\n  }\n}`;\n      \n      fs.mkdirSync(path.join(testProjectPath, 'src/services'), { recursive: true });\n      fs.writeFileSync(path.join(testProjectPath, 'src/services/UserService.ts'), serviceCode);\n\n      const targetFile = path.join(testProjectPath, 'src/UserController.ts');\n      \n      const relatedFiles = await analyzer.detectRelatedCode(targetFile, testProjectPath, {\n        analyzeDependencies: true,\n        includeTransitiveDeps: false,\n        detectRelatedFiles: true\n      });\n\n      expect(relatedFiles).toBeDefined();\n      expect(relatedFiles.some((f: RelatedFileInfo) => f.relationship === 'import')).toBe(true);\n    });\n  });\n\n  describe('Error Handling', () => {\n    test('should handle non-existent files gracefully', async () => {\n      const issue: Issue = {\n        id: 'test-issue-6',\n        type: 'missing-file',\n        severity: 'high',\n        message: 'File not found',\n        line: 1,\n        file: '/non/existent/file.ts',\n        filePath: '/non/existent/file.ts',\n        category: 'file-system' as const\n      };\n\n      const context = await analyzer.analyzeCodeContext(issue, testProjectPath, {});\n\n      expect(context).toBeDefined();\n      expect(context.targetCode.content).toBe('');\n      expect(context.imports).toHaveLength(0);\n    });\n\n    test('should handle malformed code', async () => {\n      const malformedCode = `function broken( {\n        // Missing closing brace and parameter\n        console.log(\"broken\");\n      `;\n      \n      fs.writeFileSync(path.join(testProjectPath, 'src/broken.ts'), malformedCode);\n      \n      const issue: Issue = {\n        id: 'test-issue-7',\n        type: 'syntax-error',\n        severity: 'high',\n        message: 'Syntax error',\n        line: 1,\n        file: path.join(testProjectPath, 'src/broken.ts'),\n        filePath: path.join(testProjectPath, 'src/broken.ts'),\n        category: 'syntax' as const\n      };\n\n      const context = await analyzer.analyzeCodeContext(issue, testProjectPath, {\n        analyzeFunctions: true\n      });\n\n      // Should not throw, but may have limited analysis\n      expect(context).toBeDefined();\n    });\n  });\n\n  describe('Performance', () => {\n    test('should complete analysis within reasonable time', async () => {\n      const issue: Issue = {\n        id: 'test-issue-8',\n        type: 'performance-test',\n        severity: 'medium',\n        message: 'Performance test',\n        line: 1,\n        file: path.join(testProjectPath, 'src/UserController.ts'),\n        filePath: path.join(testProjectPath, 'src/UserController.ts'),\n        category: 'performance' as const\n      };\n\n      const startTime = Date.now();\n      const context = await analyzer.analyzeCodeContext(issue, testProjectPath, {\n        includeImports: true,\n        analyzeFunctions: true,\n        analyzeClasses: true,\n        detectRelatedFiles: true\n      });\n      const endTime = Date.now();\n\n      expect(context).toBeDefined();\n      expect(endTime - startTime).toBeLessThan(5000); // 5秒以内\n    });\n\n    test('should handle large files efficiently', async () => {\n      // 大きなファイルを生成\n      const largeCode = Array.from({ length: 1000 }, (_, i) => \n        `function func${i}() { return ${i}; }`\n      ).join('\\n');\n      \n      fs.writeFileSync(path.join(testProjectPath, 'src/large.ts'), largeCode);\n\n      const issue: Issue = {\n        id: 'test-issue-9',\n        type: 'large-file-test',\n        severity: 'medium',\n        message: 'Large file test',\n        line: 500,\n        file: path.join(testProjectPath, 'src/large.ts'),\n        filePath: path.join(testProjectPath, 'src/large.ts'),\n        category: 'performance' as const\n      };\n\n      const startTime = Date.now();\n      const context = await analyzer.analyzeCodeContext(issue, testProjectPath, {\n        analyzeFunctions: true,\n        contextLines: 20\n      });\n      const endTime = Date.now();\n\n      expect(context.functions.length).toBeGreaterThan(900);\n      expect(endTime - startTime).toBeLessThan(3000); // 3秒以内\n    });\n  });\n});"],"version":3}