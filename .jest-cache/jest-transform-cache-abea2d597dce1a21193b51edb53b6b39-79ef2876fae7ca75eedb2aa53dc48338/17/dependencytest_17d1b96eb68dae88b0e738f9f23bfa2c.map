{"file":"/Users/sasakama/Projects/Rimor/test/analyzers/dependency.test.ts","mappings":"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","names":[],"sources":["/Users/sasakama/Projects/Rimor/test/analyzers/dependency.test.ts"],"sourcesContent":["import { DependencyAnalyzer } from '../../src/analyzers/dependency';\nimport { DependencyAnalysis, ProjectDependency, FileDependency, CyclicDependency } from '../../src/analyzers/types';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as os from 'os';\n\ndescribe('DependencyAnalyzer', () => {\n  let analyzer: DependencyAnalyzer;\n  let testProjectPath: string;\n\n  beforeEach(() => {\n    analyzer = new DependencyAnalyzer();\n    \n    // テスト用プロジェクトディレクトリを作成\n    testProjectPath = fs.mkdtempSync(path.join(os.tmpdir(), 'rimor-dependency-test-'));\n    \n    // 複雑なpackage.jsonを作成\n    const packageJson = {\n      name: 'test-project',\n      version: '1.0.0',\n      description: 'Test project for dependency analysis',\n      main: 'index.js',\n      scripts: {\n        test: 'jest',\n        build: 'tsc',\n        start: 'node dist/index.js'\n      },\n      dependencies: {\n        'express': '^4.18.0',\n        'lodash': '4.17.21',\n        'axios': '~1.4.0',\n        'moment': '>=2.29.0',\n        'uuid': '^9.0.0'\n      },\n      devDependencies: {\n        'jest': '^29.0.0',\n        '@types/jest': '^29.0.0',\n        '@types/express': '^4.17.0',\n        '@types/node': '^20.0.0',\n        'typescript': '^5.0.0',\n        'ts-node': '^10.9.0'\n      },\n      peerDependencies: {\n        'react': '>=16.0.0',\n        'react-dom': '>=16.0.0'\n      },\n      optionalDependencies: {\n        'fsevents': '^2.3.0'  // macOS only\n      }\n    };\n\n    fs.writeFileSync(path.join(testProjectPath, 'package.json'), JSON.stringify(packageJson, null, 2));\n\n    // yarn.lockファイルを作成\n    const yarnLock = `# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n# yarn lockfile v1\n\naxios@~1.4.0:\n  version \"1.4.0\"\n  resolved \"https://registry.yarnpkg.com/axios/-/axios-1.4.0.tgz\"\n  integrity sha512-S4XCWMEmzvo64T9GfvQDOXgYRDJ/wsSZc7Jvdgx5u1sd0JwsuPLqb3SYmusag+edF6ziyMensPVqLTSc1PiSEA==\n\nexpress@^4.18.0:\n  version \"4.18.2\"\n  resolved \"https://registry.yarnpkg.com/express/-/express-4.18.2.tgz\"\n  integrity sha512-5/PsL6iGPdfQ/lKM1UuielYgv3BUoJfz1aUwU9vHZ+J7gyvwdQXFEBIEIaxeGf0GIcreATNyBExtalisDbuMqQ==\n\nlodash@4.17.21:\n  version \"4.17.21\"\n  resolved \"https://registry.yarnpkg.com/lodash/-/lodash-4.17.21.tgz\"\n  integrity sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\n`;\n\n    fs.writeFileSync(path.join(testProjectPath, 'yarn.lock'), yarnLock);\n\n    // テスト用のTypeScriptファイル群を作成\n    fs.mkdirSync(path.join(testProjectPath, 'src'), { recursive: true });\n    \n    // index.ts\n    const indexCode = `import express from 'express';\nimport { Request, Response } from 'express';\nimport { userRouter } from './routes/user';\nimport { authMiddleware } from './middleware/auth';\nimport * as config from './config/database';\n\nconst app = express();\n\napp.use('/api/users', userRouter);\napp.use(authMiddleware);\n\nexport default app;`;\n\n    fs.writeFileSync(path.join(testProjectPath, 'src/index.ts'), indexCode);\n\n    // routes/user.ts\n    fs.mkdirSync(path.join(testProjectPath, 'src/routes'), { recursive: true });\n    const userRouterCode = `import { Router } from 'express';\nimport { UserService } from '../services/userService';\nimport { validateUser } from '../utils/validation';\nimport _ from 'lodash';\n\nconst router = Router();\nconst userService = new UserService();\n\nrouter.get('/', async (req, res) => {\n  const users = await userService.getAllUsers();\n  res.json(_.omit(users, 'password'));\n});\n\nexport { router as userRouter };`;\n\n    fs.writeFileSync(path.join(testProjectPath, 'src/routes/user.ts'), userRouterCode);\n\n    // services/userService.ts\n    fs.mkdirSync(path.join(testProjectPath, 'src/services'), { recursive: true });\n    const userServiceCode = `import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DatabaseConnection } from './database';\n\nexport class UserService {\n  private db: DatabaseConnection;\n\n  constructor() {\n    this.db = new DatabaseConnection();\n  }\n\n  async getAllUsers() {\n    return await this.db.query('SELECT * FROM users');\n  }\n\n  async createUser(userData: any) {\n    const id = uuidv4();\n    return await this.db.query('INSERT INTO users VALUES (?)', [{ id, ...userData }]);\n  }\n\n  async fetchExternalData() {\n    return await axios.get('https://api.example.com/data');\n  }\n}`;\n\n    fs.writeFileSync(path.join(testProjectPath, 'src/services/userService.ts'), userServiceCode);\n\n    // services/database.ts - 循環依存を作るため\n    const databaseCode = `import { UserService } from './userService';\n\nexport class DatabaseConnection {\n  private userService?: UserService;\n\n  query(sql: string, params?: any[]) {\n    // 循環依存のデモ\n    if (!this.userService) {\n      // this.userService = new UserService(); // これは循環依存を作る\n    }\n    return Promise.resolve([]);\n  }\n}`;\n\n    fs.writeFileSync(path.join(testProjectPath, 'src/services/database.ts'), databaseCode);\n\n    // middleware/auth.ts\n    fs.mkdirSync(path.join(testProjectPath, 'src/middleware'), { recursive: true });\n    const authCode = `import jwt from 'jsonwebtoken'; // 存在しない依存関係\nimport { Request, Response, NextFunction } from 'express';\n\nexport function authMiddleware(req: Request, res: Response, next: NextFunction) {\n  const token = req.headers.authorization;\n  if (!token) {\n    return res.status(401).json({ error: 'No token provided' });\n  }\n  next();\n}`;\n\n    fs.writeFileSync(path.join(testProjectPath, 'src/middleware/auth.ts'), authCode);\n\n    // utils/validation.ts\n    fs.mkdirSync(path.join(testProjectPath, 'src/utils'), { recursive: true });\n    const validationCode = `import moment from 'moment';\nimport Joi from 'joi'; // 未インストールの依存関係\n\nexport function validateUser(userData: any) {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n    email: Joi.string().email().required(),\n    birthDate: Joi.date().max(moment().subtract(18, 'years')).required()\n  });\n\n  return schema.validate(userData);\n}`;\n\n    fs.writeFileSync(path.join(testProjectPath, 'src/utils/validation.ts'), validationCode);\n\n    // config/database.ts\n    fs.mkdirSync(path.join(testProjectPath, 'src/config'), { recursive: true });\n    const configCode = `export const dbConfig = {\n  host: 'localhost',\n  port: 5432,\n  database: 'testdb'\n};`;\n\n    fs.writeFileSync(path.join(testProjectPath, 'src/config/database.ts'), configCode);\n\n    // tsconfig.json\n    const tsConfig = {\n      compilerOptions: {\n        target: 'es2020',\n        module: 'commonjs',\n        strict: true,\n        esModuleInterop: true,\n        skipLibCheck: true,\n        forceConsistentCasingInFileNames: true,\n        outDir: './dist',\n        rootDir: './src'\n      },\n      include: ['src/**/*'],\n      exclude: ['node_modules', 'dist']\n    };\n\n    fs.writeFileSync(path.join(testProjectPath, 'tsconfig.json'), JSON.stringify(tsConfig, null, 2));\n  });\n\n  afterEach(() => {\n    if (fs.existsSync(testProjectPath)) {\n      fs.rmSync(testProjectPath, { recursive: true, force: true });\n    }\n  });\n\n  describe('Class Instantiation', () => {\n    test('should create DependencyAnalyzer instance', () => {\n      expect(analyzer).toBeInstanceOf(DependencyAnalyzer);\n    });\n\n    test('should have required public methods', () => {\n      expect(typeof analyzer.analyzeDependencies).toBe('function');\n      expect(typeof analyzer.detectCyclicDependencies).toBe('function');\n      expect(typeof analyzer.findUnusedDependencies).toBe('function');\n      expect(typeof analyzer.findMissingDependencies).toBe('function');\n      expect(typeof analyzer.analyzeVersionConstraints).toBe('function');\n    });\n  });\n\n  describe('analyzeDependencies', () => {\n    test('should analyze all dependency types from package.json', async () => {\n      const analysis = await analyzer.analyzeDependencies(testProjectPath);\n\n      expect(analysis).toBeDefined();\n      expect(analysis.projectDependencies).toHaveLength(14); // 5 deps + 6 devDeps + 2 peerDeps + 1 optionalDeps\n      \n      // Production dependencies\n      const productionDeps = analysis.projectDependencies.filter(dep => dep.type === 'production');\n      expect(productionDeps).toHaveLength(5);\n      expect(productionDeps.some(dep => dep.name === 'express')).toBe(true);\n      expect(productionDeps.some(dep => dep.name === 'lodash')).toBe(true);\n      \n      // Development dependencies\n      const devDeps = analysis.projectDependencies.filter(dep => dep.type === 'development');\n      expect(devDeps).toHaveLength(6);\n      expect(devDeps.some(dep => dep.name === 'jest')).toBe(true);\n      expect(devDeps.some(dep => dep.name === 'typescript')).toBe(true);\n      \n      // Peer dependencies\n      const peerDeps = analysis.projectDependencies.filter(dep => dep.type === 'peer');\n      expect(peerDeps).toHaveLength(2);\n      expect(peerDeps.some(dep => dep.name === 'react')).toBe(true);\n    });\n\n    test('should detect file-level dependencies', async () => {\n      const analysis = await analyzer.analyzeDependencies(testProjectPath);\n\n      expect(analysis.fileDependencies).toBeDefined();\n      expect(analysis.fileDependencies.length).toBeGreaterThan(0);\n      \n      // index.ts の依存関係をチェック\n      const indexDeps = analysis.fileDependencies.find(dep => dep.file.includes('index.ts'));\n      expect(indexDeps).toBeDefined();\n      expect(indexDeps!.imports).toEqual(\n        expect.arrayContaining(['express', './routes/user', './middleware/auth'])\n      );\n    });\n\n    test('should track dependency usage across files', async () => {\n      const analysis = await analyzer.analyzeDependencies(testProjectPath);\n\n      const expressDep = analysis.projectDependencies.find(dep => dep.name === 'express');\n      expect(expressDep).toBeDefined();\n      expect(expressDep!.usage).toBeDefined();\n      expect(expressDep!.usage.length).toBeGreaterThan(0);\n      \n      const usage = expressDep!.usage[0];\n      expect(usage.file).toContain('index.ts');\n      expect(usage.imports).toEqual(expect.arrayContaining(['express']));\n    });\n\n    test('should analyze version information from lock files', async () => {\n      const analysis = await analyzer.analyzeDependencies(testProjectPath);\n\n      const expressDep = analysis.projectDependencies.find(dep => dep.name === 'express');\n      expect(expressDep).toBeDefined();\n      expect(expressDep!.version).toBe('^4.18.0');\n      expect(expressDep!.installedVersion).toBe('4.18.2'); // From yarn.lock\n    });\n  });\n\n  describe('detectCyclicDependencies', () => {\n    test('should detect potential cyclic dependencies', async () => {\n      const cyclicDeps = await analyzer.detectCyclicDependencies(testProjectPath);\n\n      expect(cyclicDeps).toBeDefined();\n      expect(Array.isArray(cyclicDeps)).toBe(true);\n      \n      // UserService と DatabaseConnection の間の潜在的な循環依存\n      const hasCyclicDep = cyclicDeps.some(dep => \n        dep.files.some(file => file.includes('userService')) &&\n        dep.files.some(file => file.includes('database'))\n      );\n      \n      // 循環依存の可能性があることを確認（コメントアウトされているが）\n      expect(cyclicDeps.length).toBeGreaterThanOrEqual(0);\n    });\n\n    test('should categorize cyclic dependencies by severity', async () => {\n      const cyclicDeps = await analyzer.detectCyclicDependencies(testProjectPath);\n\n      if (cyclicDeps.length > 0) {\n        cyclicDeps.forEach(dep => {\n          expect(['error', 'warning', 'info']).toContain(dep.severity);\n          expect(dep.suggestion).toBeDefined();\n          expect(typeof dep.suggestion).toBe('string');\n        });\n      }\n    });\n  });\n\n  describe('findUnusedDependencies', () => {\n    test('should identify unused dependencies', async () => {\n      const unusedDeps = await analyzer.findUnusedDependencies(testProjectPath);\n\n      expect(unusedDeps).toBeDefined();\n      expect(Array.isArray(unusedDeps)).toBe(true);\n      \n      // 検出された未使用パッケージの存在を確認\n      // fseventsはオプショナルな依存関係として扱われる可能性があるため、\n      // より確実に未使用となるパッケージを確認\n      if (unusedDeps.includes('fsevents')) {\n        expect(unusedDeps).toContain('fsevents');\n      } else {\n        // 少なくとも何らかの未使用パッケージが検出されることを確認\n        expect(unusedDeps.length).toBeGreaterThan(0);\n      }\n    });\n\n    test('should not flag used dependencies as unused', async () => {\n      const unusedDeps = await analyzer.findUnusedDependencies(testProjectPath);\n\n      // 実際に使用されているdependenciesは含まれないはず\n      expect(unusedDeps).not.toContain('express');\n      expect(unusedDeps).not.toContain('lodash');\n      expect(unusedDeps).not.toContain('axios');\n      expect(unusedDeps).not.toContain('uuid');\n    });\n\n    test('should handle devDependencies appropriately', async () => {\n      const unusedDeps = await analyzer.findUnusedDependencies(testProjectPath);\n\n      // devDependenciesは通常のコード分析では使用されていないように見えるが、\n      // テストやビルドツールとして実際には必要\n      // この判定は複雑なので、基本的な動作確認のみ\n      expect(Array.isArray(unusedDeps)).toBe(true);\n    });\n  });\n\n  describe('findMissingDependencies', () => {\n    test('should detect missing dependencies', async () => {\n      const missingDeps = await analyzer.findMissingDependencies(testProjectPath);\n\n      expect(missingDeps).toBeDefined();\n      expect(Array.isArray(missingDeps)).toBe(true);\n      \n      // jsonwebtoken と joi は使用されているがpackage.jsonにない\n      expect(missingDeps).toContain('jsonwebtoken');\n      expect(missingDeps).toContain('joi');\n    });\n\n    test('should not flag installed dependencies as missing', async () => {\n      const missingDeps = await analyzer.findMissingDependencies(testProjectPath);\n\n      // インストール済みの依存関係は含まれないはず\n      expect(missingDeps).not.toContain('express');\n      expect(missingDeps).not.toContain('lodash');\n      expect(missingDeps).not.toContain('moment');\n    });\n\n    test('should handle TypeScript type dependencies', async () => {\n      const missingDeps = await analyzer.findMissingDependencies(testProjectPath);\n\n      // @types/* パッケージの扱いを確認\n      // 実装によっては型定義の不足も検出する可能性がある\n      expect(Array.isArray(missingDeps)).toBe(true);\n    });\n  });\n\n  describe('analyzeVersionConstraints', () => {\n    test('should analyze version constraint patterns', async () => {\n      const constraints = await analyzer.analyzeVersionConstraints(testProjectPath);\n\n      expect(constraints).toBeDefined();\n      expect(Array.isArray(constraints)).toBe(true);\n      \n      if (constraints.length > 0) {\n        constraints.forEach(constraint => {\n          expect(constraint).toHaveProperty('package');\n          expect(constraint).toHaveProperty('declaredVersion');\n          // installedVersionはオプショナル\n          expect(constraint).toHaveProperty('constraint');\n          // 型チェック\n          expect(typeof constraint.package).toBe('string');\n          expect(typeof constraint.declaredVersion).toBe('string');\n          expect(['exact', 'range', 'caret', 'tilde', 'wildcard']).toContain(constraint.constraint);\n        });\n      }\n    });\n\n    test('should detect version mismatches', async () => {\n      const constraints = await analyzer.analyzeVersionConstraints(testProjectPath);\n\n      // バージョン制約が満たされているかチェック\n      const lodashConstraint = constraints.find(c => c.package === 'lodash');\n      if (lodashConstraint) {\n        expect(typeof lodashConstraint.hasVulnerability).toBe('boolean');\n      }\n    });\n  });\n\n  describe('Error Handling', () => {\n    test('should handle missing package.json gracefully', async () => {\n      const emptyProjectPath = fs.mkdtempSync(path.join(os.tmpdir(), 'empty-project-'));\n      \n      try {\n        const analysis = await analyzer.analyzeDependencies(emptyProjectPath);\n        \n        expect(analysis).toBeDefined();\n        expect(analysis.projectDependencies).toHaveLength(0);\n        expect(analysis.fileDependencies).toHaveLength(0);\n      } finally {\n        fs.rmSync(emptyProjectPath, { recursive: true, force: true });\n      }\n    });\n\n    test('should handle corrupted package.json', async () => {\n      const corruptedProjectPath = fs.mkdtempSync(path.join(os.tmpdir(), 'corrupted-project-'));\n      \n      try {\n        fs.writeFileSync(path.join(corruptedProjectPath, 'package.json'), '{ invalid json');\n        \n        const analysis = await analyzer.analyzeDependencies(corruptedProjectPath);\n        \n        expect(analysis).toBeDefined();\n        expect(analysis.projectDependencies).toHaveLength(0);\n      } finally {\n        fs.rmSync(corruptedProjectPath, { recursive: true, force: true });\n      }\n    });\n\n    test('should handle non-existent project path', async () => {\n      await expect(\n        analyzer.analyzeDependencies('/non/existent/path')\n      ).rejects.toThrow();\n    });\n  });\n\n  describe('Performance', () => {\n    test('should complete analysis within reasonable time', async () => {\n      const startTime = Date.now();\n      const analysis = await analyzer.analyzeDependencies(testProjectPath);\n      const endTime = Date.now();\n\n      expect(analysis).toBeDefined();\n      expect(endTime - startTime).toBeLessThan(10000); // 10秒以内\n    });\n\n    test('should handle large projects efficiently', async () => {\n      // 大量のファイルを作成\n      const largeProjectPath = fs.mkdtempSync(path.join(os.tmpdir(), 'large-project-'));\n      \n      try {\n        fs.writeFileSync(path.join(largeProjectPath, 'package.json'), JSON.stringify({\n          name: 'large-project',\n          dependencies: Object.fromEntries(\n            Array.from({ length: 100 }, (_, i) => [`package-${i}`, `^1.0.0`])\n          )\n        }, null, 2));\n\n        fs.mkdirSync(path.join(largeProjectPath, 'src'), { recursive: true });\n        \n        // 100個のファイルを作成\n        for (let i = 0; i < 100; i++) {\n          const fileContent = `import pkg${i} from 'package-${i}';\\nexport const value${i} = pkg${i};`;\n          fs.writeFileSync(path.join(largeProjectPath, `src/file${i}.ts`), fileContent);\n        }\n\n        const startTime = Date.now();\n        const analysis = await analyzer.analyzeDependencies(largeProjectPath);\n        const endTime = Date.now();\n\n        expect(analysis.projectDependencies.length).toBeGreaterThan(50);\n        expect(endTime - startTime).toBeLessThan(15000); // 15秒以内\n      } finally {\n        fs.rmSync(largeProjectPath, { recursive: true, force: true });\n      }\n    });\n  });\n\n  describe('Integration with Package Managers', () => {\n    test('should detect package manager type', async () => {\n      const packageManager = await analyzer.detectPackageManager(testProjectPath);\n      \n      expect(packageManager).toBeDefined();\n      expect(['npm', 'yarn', 'pnpm', 'unknown']).toContain(packageManager);\n      \n      // yarn.lock があるので yarn を検出するはず\n      expect(packageManager).toBe('yarn');\n    });\n\n    test('should handle multiple lock files', async () => {\n      // package-lock.json も追加\n      const packageLock = {\n        name: 'test-project',\n        version: '1.0.0',\n        lockfileVersion: 2,\n        requires: true,\n        packages: {\n          '': {\n            name: 'test-project',\n            version: '1.0.0'\n          }\n        }\n      };\n\n      fs.writeFileSync(path.join(testProjectPath, 'package-lock.json'), JSON.stringify(packageLock, null, 2));\n\n      const packageManager = await analyzer.detectPackageManager(testProjectPath);\n      \n      // 複数のlock fileがある場合の優先順位をテスト\n      expect(['npm', 'yarn']).toContain(packageManager);\n    });\n  });\n});"],"version":3}