33f3f13c2bbc831de3ec21ce43d5db11
"use strict";
/**
 * CIトレーサビリティ機能
 * GitHub Actions環境変数から実行コンテキストを収集
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CITraceabilityCollector = void 0;
class CITraceabilityCollector {
    /**
     * GitHub Actions環境変数からトレーサビリティ情報を収集
     */
    static collect() {
        // CI環境でない場合はnullを返す
        if (process.env.CI !== 'true') {
            return null;
        }
        const prNumber = this.extractPRNumber();
        return {
            runId: process.env.GITHUB_RUN_ID || 'unknown',
            runNumber: process.env.GITHUB_RUN_NUMBER || 'unknown',
            workflow: process.env.GITHUB_WORKFLOW || 'unknown',
            job: process.env.GITHUB_JOB || 'unknown',
            actor: process.env.GITHUB_ACTOR || 'unknown',
            repository: process.env.GITHUB_REPOSITORY || 'unknown',
            branch: process.env.GITHUB_REF_NAME || 'unknown',
            sha: process.env.GITHUB_SHA || 'unknown',
            prNumber,
            nodeVersion: process.version,
            os: process.env.RUNNER_OS || process.platform,
            timestamp: new Date().toISOString(),
            errorHash: '' // エラー収集時に設定
        };
    }
    /**
     * PR番号を抽出
     */
    static extractPRNumber() {
        // GITHUB_REF形式: refs/pull/123/merge
        const ref = process.env.GITHUB_REF;
        if (ref && ref.includes('pull/')) {
            const match = ref.match(/pull\/(\d+)\//);
            if (match) {
                return match[1];
            }
        }
        // GitHub Actions のPRイベント
        if (process.env.GITHUB_EVENT_NAME === 'pull_request') {
            // PR番号は通常、イベントペイロードから取得するが、
            // ここでは簡易的にREFから取得
            return undefined;
        }
        return undefined;
    }
    /**
     * エラーハッシュを生成
     */
    static generateErrorHash(error) {
        const crypto = require('crypto');
        const data = `${error.testFile}:${error.testName}:${error.errorMessage}`;
        return crypto.createHash('md5').update(data).digest('hex').substring(0, 8);
    }
    /**
     * CI実行へのディープリンクを生成
     */
    static generateDeepLink(traceability) {
        const { repository, runId } = traceability;
        return `https://github.com/${repository}/actions/runs/${runId}`;
    }
    /**
     * PRへのリンクを生成
     */
    static generatePRLink(traceability) {
        if (!traceability.prNumber) {
            return undefined;
        }
        const { repository, prNumber } = traceability;
        return `https://github.com/${repository}/pull/${prNumber}`;
    }
}
exports.CITraceabilityCollector = CITraceabilityCollector;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL3Nhc2FrYW1hL1Byb2plY3RzL1JpbW9yL3NyYy90ZXN0aW5nL2NpLXRyYWNlYWJpbGl0eS50cyIsIm1hcHBpbmdzIjoiO0FBQUE7OztHQUdHOzs7QUF5QkgsTUFBYSx1QkFBdUI7SUFDbEM7O09BRUc7SUFDSCxNQUFNLENBQUMsT0FBTztRQUNaLG9CQUFvQjtRQUNwQixJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxLQUFLLE1BQU0sRUFBRSxDQUFDO1lBQzlCLE9BQU8sSUFBSSxDQUFDO1FBQ2QsQ0FBQztRQUVELE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUV4QyxPQUFPO1lBQ0wsS0FBSyxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxJQUFJLFNBQVM7WUFDN0MsU0FBUyxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLElBQUksU0FBUztZQUNyRCxRQUFRLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLElBQUksU0FBUztZQUNsRCxHQUFHLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLElBQUksU0FBUztZQUN4QyxLQUFLLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLElBQUksU0FBUztZQUM1QyxVQUFVLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsSUFBSSxTQUFTO1lBQ3RELE1BQU0sRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWUsSUFBSSxTQUFTO1lBQ2hELEdBQUcsRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsSUFBSSxTQUFTO1lBQ3hDLFFBQVE7WUFDUixXQUFXLEVBQUUsT0FBTyxDQUFDLE9BQU87WUFDNUIsRUFBRSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxJQUFJLE9BQU8sQ0FBQyxRQUFRO1lBQzdDLFNBQVMsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLFdBQVcsRUFBRTtZQUNuQyxTQUFTLEVBQUUsRUFBRSxDQUFDLFlBQVk7U0FDM0IsQ0FBQztJQUNKLENBQUM7SUFFRDs7T0FFRztJQUNLLE1BQU0sQ0FBQyxlQUFlO1FBQzVCLG9DQUFvQztRQUNwQyxNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQztRQUNuQyxJQUFJLEdBQUcsSUFBSSxHQUFHLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDakMsTUFBTSxLQUFLLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQztZQUN6QyxJQUFJLEtBQUssRUFBRSxDQUFDO2dCQUNWLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2xCLENBQUM7UUFDSCxDQUFDO1FBRUQseUJBQXlCO1FBQ3pCLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsS0FBSyxjQUFjLEVBQUUsQ0FBQztZQUNyRCw0QkFBNEI7WUFDNUIsa0JBQWtCO1lBQ2xCLE9BQU8sU0FBUyxDQUFDO1FBQ25CLENBQUM7UUFFRCxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDO0lBRUQ7O09BRUc7SUFDSCxNQUFNLENBQUMsaUJBQWlCLENBQUMsS0FJeEI7UUFDQyxNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDakMsTUFBTSxJQUFJLEdBQUcsR0FBRyxLQUFLLENBQUMsUUFBUSxJQUFJLEtBQUssQ0FBQyxRQUFRLElBQUksS0FBSyxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3pFLE9BQU8sTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDN0UsQ0FBQztJQUVEOztPQUVHO0lBQ0gsTUFBTSxDQUFDLGdCQUFnQixDQUFDLFlBQTRCO1FBQ2xELE1BQU0sRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLEdBQUcsWUFBWSxDQUFDO1FBQzNDLE9BQU8sc0JBQXNCLFVBQVUsaUJBQWlCLEtBQUssRUFBRSxDQUFDO0lBQ2xFLENBQUM7SUFFRDs7T0FFRztJQUNILE1BQU0sQ0FBQyxjQUFjLENBQUMsWUFBNEI7UUFDaEQsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUMzQixPQUFPLFNBQVMsQ0FBQztRQUNuQixDQUFDO1FBQ0QsTUFBTSxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsR0FBRyxZQUFZLENBQUM7UUFDOUMsT0FBTyxzQkFBc0IsVUFBVSxTQUFTLFFBQVEsRUFBRSxDQUFDO0lBQzdELENBQUM7Q0FDRjtBQW5GRCwwREFtRkMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL3Nhc2FrYW1hL1Byb2plY3RzL1JpbW9yL3NyYy90ZXN0aW5nL2NpLXRyYWNlYWJpbGl0eS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENJ44OI44Os44O844K144OT44Oq44OG44Kj5qmf6IO9XG4gKiBHaXRIdWIgQWN0aW9uc+eSsOWig+WkieaVsOOBi+OCieWun+ihjOOCs+ODs+ODhuOCreOCueODiOOCkuWPjumbhlxuICovXG5cbmV4cG9ydCBpbnRlcmZhY2UgQ0lUcmFjZWFiaWxpdHkge1xuICAvLyBHaXRIdWIgQWN0aW9uc+aDheWgsVxuICBydW5JZDogc3RyaW5nOyAgICAgICAgICAgLy8gR0lUSFVCX1JVTl9JRFxuICBydW5OdW1iZXI6IHN0cmluZzsgICAgICAgLy8gR0lUSFVCX1JVTl9OVU1CRVJcbiAgd29ya2Zsb3c6IHN0cmluZzsgICAgICAgIC8vIEdJVEhVQl9XT1JLRkxPV1xuICBqb2I6IHN0cmluZzsgICAgICAgICAgICAvLyBHSVRIVUJfSk9CXG4gIGFjdG9yOiBzdHJpbmc7ICAgICAgICAgIC8vIEdJVEhVQl9BQ1RPUlxuICBcbiAgLy8g44Oq44Od44K444OI44Oq5oOF5aCxXG4gIHJlcG9zaXRvcnk6IHN0cmluZzsgICAgICAvLyBHSVRIVUJfUkVQT1NJVE9SWVxuICBicmFuY2g6IHN0cmluZzsgICAgICAgICAvLyBHSVRIVUJfUkVGX05BTUVcbiAgc2hhOiBzdHJpbmc7ICAgICAgICAgICAvLyBHSVRIVUJfU0hBXG4gIHByTnVtYmVyPzogc3RyaW5nOyAgICAgIC8vIFBS55Wq5Y+377yI6Kmy5b2T44GZ44KL5aC05ZCI77yJXG4gIFxuICAvLyDlrp/ooYznkrDlooNcbiAgbm9kZVZlcnNpb246IHN0cmluZzsgICAgLy8g44Oe44OI44Oq44OD44Kv44K55oOF5aCx44GL44KJ5Y+W5b6XXG4gIG9zOiBzdHJpbmc7ICAgICAgICAgICAgLy8g44Op44Oz44OK44O8T1MgKFJVTk5FUl9PUylcbiAgdGltZXN0YW1wOiBzdHJpbmc7ICAgICAgLy8g5a6f6KGM5pel5pmCXG4gIFxuICAvLyDjgqjjg6njg7znhaflkIjnlKhcbiAgZXJyb3JIYXNoOiBzdHJpbmc7ICAgICAgLy8g44Ko44Op44O844Gu5LiA5oSP6K2Y5Yil5a2QXG59XG5cbmV4cG9ydCBjbGFzcyBDSVRyYWNlYWJpbGl0eUNvbGxlY3RvciB7XG4gIC8qKlxuICAgKiBHaXRIdWIgQWN0aW9uc+eSsOWig+WkieaVsOOBi+OCieODiOODrOODvOOCteODk+ODquODhuOCo+aDheWgseOCkuWPjumbhlxuICAgKi9cbiAgc3RhdGljIGNvbGxlY3QoKTogQ0lUcmFjZWFiaWxpdHkgfCBudWxsIHtcbiAgICAvLyBDSeeSsOWig+OBp+OBquOBhOWgtOWQiOOBr251bGzjgpLov5TjgZlcbiAgICBpZiAocHJvY2Vzcy5lbnYuQ0kgIT09ICd0cnVlJykge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IHByTnVtYmVyID0gdGhpcy5leHRyYWN0UFJOdW1iZXIoKTtcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgcnVuSWQ6IHByb2Nlc3MuZW52LkdJVEhVQl9SVU5fSUQgfHwgJ3Vua25vd24nLFxuICAgICAgcnVuTnVtYmVyOiBwcm9jZXNzLmVudi5HSVRIVUJfUlVOX05VTUJFUiB8fCAndW5rbm93bicsXG4gICAgICB3b3JrZmxvdzogcHJvY2Vzcy5lbnYuR0lUSFVCX1dPUktGTE9XIHx8ICd1bmtub3duJyxcbiAgICAgIGpvYjogcHJvY2Vzcy5lbnYuR0lUSFVCX0pPQiB8fCAndW5rbm93bicsXG4gICAgICBhY3RvcjogcHJvY2Vzcy5lbnYuR0lUSFVCX0FDVE9SIHx8ICd1bmtub3duJyxcbiAgICAgIHJlcG9zaXRvcnk6IHByb2Nlc3MuZW52LkdJVEhVQl9SRVBPU0lUT1JZIHx8ICd1bmtub3duJyxcbiAgICAgIGJyYW5jaDogcHJvY2Vzcy5lbnYuR0lUSFVCX1JFRl9OQU1FIHx8ICd1bmtub3duJyxcbiAgICAgIHNoYTogcHJvY2Vzcy5lbnYuR0lUSFVCX1NIQSB8fCAndW5rbm93bicsXG4gICAgICBwck51bWJlcixcbiAgICAgIG5vZGVWZXJzaW9uOiBwcm9jZXNzLnZlcnNpb24sXG4gICAgICBvczogcHJvY2Vzcy5lbnYuUlVOTkVSX09TIHx8IHByb2Nlc3MucGxhdGZvcm0sXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgIGVycm9ySGFzaDogJycgLy8g44Ko44Op44O85Y+O6ZuG5pmC44Gr6Kit5a6aXG4gICAgfTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIFBS55Wq5Y+344KS5oq95Ye6XG4gICAqL1xuICBwcml2YXRlIHN0YXRpYyBleHRyYWN0UFJOdW1iZXIoKTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcbiAgICAvLyBHSVRIVUJfUkVG5b2i5byPOiByZWZzL3B1bGwvMTIzL21lcmdlXG4gICAgY29uc3QgcmVmID0gcHJvY2Vzcy5lbnYuR0lUSFVCX1JFRjtcbiAgICBpZiAocmVmICYmIHJlZi5pbmNsdWRlcygncHVsbC8nKSkge1xuICAgICAgY29uc3QgbWF0Y2ggPSByZWYubWF0Y2goL3B1bGxcXC8oXFxkKylcXC8vKTtcbiAgICAgIGlmIChtYXRjaCkge1xuICAgICAgICByZXR1cm4gbWF0Y2hbMV07XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIC8vIEdpdEh1YiBBY3Rpb25zIOOBrlBS44Kk44OZ44Oz44OIXG4gICAgaWYgKHByb2Nlc3MuZW52LkdJVEhVQl9FVkVOVF9OQU1FID09PSAncHVsbF9yZXF1ZXN0Jykge1xuICAgICAgLy8gUFLnlarlj7fjga/pgJrluLjjgIHjgqTjg5njg7Pjg4jjg5rjgqTjg63jg7zjg4njgYvjgonlj5blvpfjgZnjgovjgYzjgIFcbiAgICAgIC8vIOOBk+OBk+OBp+OBr+ewoeaYk+eahOOBq1JFRuOBi+OCieWPluW+l1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOOCqOODqeODvOODj+ODg+OCt+ODpeOCkueUn+aIkFxuICAgKi9cbiAgc3RhdGljIGdlbmVyYXRlRXJyb3JIYXNoKGVycm9yOiB7XG4gICAgdGVzdEZpbGU6IHN0cmluZztcbiAgICB0ZXN0TmFtZTogc3RyaW5nO1xuICAgIGVycm9yTWVzc2FnZTogc3RyaW5nO1xuICB9KTogc3RyaW5nIHtcbiAgICBjb25zdCBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKTtcbiAgICBjb25zdCBkYXRhID0gYCR7ZXJyb3IudGVzdEZpbGV9OiR7ZXJyb3IudGVzdE5hbWV9OiR7ZXJyb3IuZXJyb3JNZXNzYWdlfWA7XG4gICAgcmV0dXJuIGNyeXB0by5jcmVhdGVIYXNoKCdtZDUnKS51cGRhdGUoZGF0YSkuZGlnZXN0KCdoZXgnKS5zdWJzdHJpbmcoMCwgOCk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBDSeWun+ihjOOBuOOBruODh+OCo+ODvOODl+ODquODs+OCr+OCkueUn+aIkFxuICAgKi9cbiAgc3RhdGljIGdlbmVyYXRlRGVlcExpbmsodHJhY2VhYmlsaXR5OiBDSVRyYWNlYWJpbGl0eSk6IHN0cmluZyB7XG4gICAgY29uc3QgeyByZXBvc2l0b3J5LCBydW5JZCB9ID0gdHJhY2VhYmlsaXR5O1xuICAgIHJldHVybiBgaHR0cHM6Ly9naXRodWIuY29tLyR7cmVwb3NpdG9yeX0vYWN0aW9ucy9ydW5zLyR7cnVuSWR9YDtcbiAgfVxuICBcbiAgLyoqXG4gICAqIFBS44G444Gu44Oq44Oz44Kv44KS55Sf5oiQXG4gICAqL1xuICBzdGF0aWMgZ2VuZXJhdGVQUkxpbmsodHJhY2VhYmlsaXR5OiBDSVRyYWNlYWJpbGl0eSk6IHN0cmluZyB8IHVuZGVmaW5lZCB7XG4gICAgaWYgKCF0cmFjZWFiaWxpdHkucHJOdW1iZXIpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGNvbnN0IHsgcmVwb3NpdG9yeSwgcHJOdW1iZXIgfSA9IHRyYWNlYWJpbGl0eTtcbiAgICByZXR1cm4gYGh0dHBzOi8vZ2l0aHViLmNvbS8ke3JlcG9zaXRvcnl9L3B1bGwvJHtwck51bWJlcn1gO1xuICB9XG59Il0sInZlcnNpb24iOjN9