{"file":"/Users/sasakama/Projects/Rimor/src/testing/ci-traceability.ts","mappings":";AAAA;;;GAGG;;;AAyBH,MAAa,uBAAuB;IAClC;;OAEG;IACH,MAAM,CAAC,OAAO;QACZ,oBAAoB;QACpB,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,MAAM,EAAE,CAAC;YAC9B,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAExC,OAAO;YACL,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,SAAS;YAC7C,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB,IAAI,SAAS;YACrD,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,SAAS;YAClD,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,SAAS;YACxC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,SAAS;YAC5C,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB,IAAI,SAAS;YACtD,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,SAAS;YAChD,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,SAAS;YACxC,QAAQ;YACR,WAAW,EAAE,OAAO,CAAC,OAAO;YAC5B,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ;YAC7C,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACnC,SAAS,EAAE,EAAE,CAAC,YAAY;SAC3B,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,eAAe;QAC5B,oCAAoC;QACpC,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QACnC,IAAI,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;YACjC,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;YACzC,IAAI,KAAK,EAAE,CAAC;gBACV,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC;QACH,CAAC;QAED,yBAAyB;QACzB,IAAI,OAAO,CAAC,GAAG,CAAC,iBAAiB,KAAK,cAAc,EAAE,CAAC;YACrD,4BAA4B;YAC5B,kBAAkB;YAClB,OAAO,SAAS,CAAC;QACnB,CAAC;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,iBAAiB,CAAC,KAIxB;QACC,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;QACjC,MAAM,IAAI,GAAG,GAAG,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,YAAY,EAAE,CAAC;QACzE,OAAO,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,gBAAgB,CAAC,YAA4B;QAClD,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,YAAY,CAAC;QAC3C,OAAO,sBAAsB,UAAU,iBAAiB,KAAK,EAAE,CAAC;IAClE,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,cAAc,CAAC,YAA4B;QAChD,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;YAC3B,OAAO,SAAS,CAAC;QACnB,CAAC;QACD,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,YAAY,CAAC;QAC9C,OAAO,sBAAsB,UAAU,SAAS,QAAQ,EAAE,CAAC;IAC7D,CAAC;CACF;AAnFD,0DAmFC","names":[],"sources":["/Users/sasakama/Projects/Rimor/src/testing/ci-traceability.ts"],"sourcesContent":["/**\n * CIトレーサビリティ機能\n * GitHub Actions環境変数から実行コンテキストを収集\n */\n\nexport interface CITraceability {\n  // GitHub Actions情報\n  runId: string;           // GITHUB_RUN_ID\n  runNumber: string;       // GITHUB_RUN_NUMBER\n  workflow: string;        // GITHUB_WORKFLOW\n  job: string;            // GITHUB_JOB\n  actor: string;          // GITHUB_ACTOR\n  \n  // リポジトリ情報\n  repository: string;      // GITHUB_REPOSITORY\n  branch: string;         // GITHUB_REF_NAME\n  sha: string;           // GITHUB_SHA\n  prNumber?: string;      // PR番号（該当する場合）\n  \n  // 実行環境\n  nodeVersion: string;    // マトリックス情報から取得\n  os: string;            // ランナーOS (RUNNER_OS)\n  timestamp: string;      // 実行日時\n  \n  // エラー照合用\n  errorHash: string;      // エラーの一意識別子\n}\n\nexport class CITraceabilityCollector {\n  /**\n   * GitHub Actions環境変数からトレーサビリティ情報を収集\n   */\n  static collect(): CITraceability | null {\n    // CI環境でない場合はnullを返す\n    if (process.env.CI !== 'true') {\n      return null;\n    }\n    \n    const prNumber = this.extractPRNumber();\n    \n    return {\n      runId: process.env.GITHUB_RUN_ID || 'unknown',\n      runNumber: process.env.GITHUB_RUN_NUMBER || 'unknown',\n      workflow: process.env.GITHUB_WORKFLOW || 'unknown',\n      job: process.env.GITHUB_JOB || 'unknown',\n      actor: process.env.GITHUB_ACTOR || 'unknown',\n      repository: process.env.GITHUB_REPOSITORY || 'unknown',\n      branch: process.env.GITHUB_REF_NAME || 'unknown',\n      sha: process.env.GITHUB_SHA || 'unknown',\n      prNumber,\n      nodeVersion: process.version,\n      os: process.env.RUNNER_OS || process.platform,\n      timestamp: new Date().toISOString(),\n      errorHash: '' // エラー収集時に設定\n    };\n  }\n  \n  /**\n   * PR番号を抽出\n   */\n  private static extractPRNumber(): string | undefined {\n    // GITHUB_REF形式: refs/pull/123/merge\n    const ref = process.env.GITHUB_REF;\n    if (ref && ref.includes('pull/')) {\n      const match = ref.match(/pull\\/(\\d+)\\//);\n      if (match) {\n        return match[1];\n      }\n    }\n    \n    // GitHub Actions のPRイベント\n    if (process.env.GITHUB_EVENT_NAME === 'pull_request') {\n      // PR番号は通常、イベントペイロードから取得するが、\n      // ここでは簡易的にREFから取得\n      return undefined;\n    }\n    \n    return undefined;\n  }\n  \n  /**\n   * エラーハッシュを生成\n   */\n  static generateErrorHash(error: {\n    testFile: string;\n    testName: string;\n    errorMessage: string;\n  }): string {\n    const crypto = require('crypto');\n    const data = `${error.testFile}:${error.testName}:${error.errorMessage}`;\n    return crypto.createHash('md5').update(data).digest('hex').substring(0, 8);\n  }\n  \n  /**\n   * CI実行へのディープリンクを生成\n   */\n  static generateDeepLink(traceability: CITraceability): string {\n    const { repository, runId } = traceability;\n    return `https://github.com/${repository}/actions/runs/${runId}`;\n  }\n  \n  /**\n   * PRへのリンクを生成\n   */\n  static generatePRLink(traceability: CITraceability): string | undefined {\n    if (!traceability.prNumber) {\n      return undefined;\n    }\n    const { repository, prNumber } = traceability;\n    return `https://github.com/${repository}/pull/${prNumber}`;\n  }\n}"],"version":3}