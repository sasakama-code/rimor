{"file":"/Users/sasakama/Projects/Rimor/src/reporting/AnnotationGenerator.ts","mappings":"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","names":[],"sources":["/Users/sasakama/Projects/Rimor/src/reporting/AnnotationGenerator.ts"],"sourcesContent":["/**\n * Annotation Generator\n * v0.8.0 - Phase 4: Context Engineering\n * \n * 検出された問題に対応するインライン・アノテーションを生成\n */\n\nimport { injectable } from 'inversify';\nimport {\n  Issue,\n  Severity,\n  IssueType,\n  CodeLocation,\n  DataFlow,\n  AnnotationOptions\n} from './types';\nimport { SeverityLevel } from '../core/types';\n\ninterface AnnotationLine {\n  lineNumber: number;\n  annotation: string;\n}\n\n@injectable()\nexport class AnnotationGenerator {\n  private readonly defaultPrefix = 'RIMOR';\n\n  /**\n   * 問題に対するアノテーションを生成\n   */\n  generateAnnotation(issue: Issue, options?: AnnotationOptions): string {\n    const prefix = options?.prefix || this.defaultPrefix;\n    const format = options?.format || 'inline';\n\n    if (format === 'block') {\n      return this.generateBlockAnnotation(issue, prefix, options);\n    } else {\n      return this.generateInlineAnnotation(issue, prefix, options);\n    }\n  }\n\n  /**\n   * インラインアノテーションを生成\n   */\n  private generateInlineAnnotation(\n    issue: Issue,\n    prefix: string,\n    options?: AnnotationOptions\n  ): string {\n    const parts: string[] = [];\n\n    // プレフィックスと重要度\n    parts.push(`${prefix}-${this.getSeverityTag(issue.severity as any)}:`);\n\n    // 問題タイプ\n    parts.push(`[${issue.severity}]`);\n    parts.push(issue.type);\n\n    // メッセージ\n    parts.push('-');\n    parts.push(issue.message);\n\n    // データフロー情報（オプション）\n    if (options?.includeDataFlow && issue.dataFlow) {\n      parts.push(this.formatDataFlowInline(issue.dataFlow));\n    }\n\n    return `// ${parts.join(' ')}`;\n  }\n\n  /**\n   * ブロックアノテーションを生成\n   */\n  private generateBlockAnnotation(\n    issue: Issue,\n    prefix: string,\n    options?: AnnotationOptions\n  ): string {\n    const lines: string[] = [];\n\n    // 開始行\n    lines.push('/**');\n    lines.push(` * ${prefix} Security Analysis Report`);\n    lines.push(` * `);\n    \n    // 問題の詳細\n    lines.push(` * Issue: ${issue.type}`);\n    lines.push(` * Severity: ${issue.severity}`);\n    lines.push(` * ID: ${issue.id}`);\n    lines.push(` * `);\n    \n    // メッセージ（複数行対応）\n    const messageLines = issue.message.split('\\n');\n    messageLines.forEach(line => {\n      lines.push(` * ${line}`);\n    });\n\n    // 推奨事項\n    if (issue.recommendation) {\n      lines.push(` * `);\n      lines.push(` * Recommendation:`);\n      const recommendationLines = issue.recommendation.split('\\n');\n      recommendationLines.forEach(line => {\n        lines.push(` * ${line}`);\n      });\n    }\n\n    // データフロー情報\n    if (options?.includeDataFlow && issue.dataFlow) {\n      lines.push(` * `);\n      lines.push(` * Data Flow Analysis:`);\n      lines.push(...this.formatDataFlowBlock(issue.dataFlow));\n    }\n\n    // 参考資料\n    if (issue.references && issue.references.length > 0) {\n      lines.push(` * `);\n      lines.push(` * References:`);\n      issue.references.forEach(ref => {\n        lines.push(` * - ${ref}`);\n      });\n    }\n\n    // 終了行\n    lines.push(' */');\n\n    return lines.join('\\n');\n  }\n\n  /**\n   * 複数の問題に対するアノテーションを行番号でグループ化\n   */\n  groupAnnotationsByLine(\n    issues: Issue[],\n    options?: AnnotationOptions\n  ): Map<string, AnnotationLine[]> {\n    const annotationsByFile = new Map<string, AnnotationLine[]>();\n\n    issues.forEach(issue => {\n      if (!issue.location) return;\n      const file = issue.location.file;\n      if (!annotationsByFile.has(file)) {\n        annotationsByFile.set(file, []);\n      }\n\n      const annotation = this.generateAnnotation(issue, options);\n      const annotationLine: AnnotationLine = {\n        lineNumber: issue.location.startLine - 1, // 0-indexed\n        annotation\n      };\n\n      annotationsByFile.get(file)!.push(annotationLine);\n    });\n\n    // 各ファイルのアノテーションを行番号でソート\n    annotationsByFile.forEach((annotations, file) => {\n      annotations.sort((a, b) => a.lineNumber - b.lineNumber);\n    });\n\n    return annotationsByFile;\n  }\n\n  /**\n   * アノテーション用のスタンドアロンレポートを生成\n   */\n  generateAnnotationReport(issues: Issue[]): string {\n    const lines: string[] = [];\n    \n    lines.push('# Rimor Annotation Report');\n    lines.push('');\n    lines.push('## Summary');\n    lines.push(`Total issues found: ${issues.length}`);\n    lines.push('');\n    \n    // ファイル別にグループ化\n    const issuesByFile = new Map<string, Issue[]>();\n    issues.forEach(issue => {\n      if (!issue.location) return;\n      const file = issue.location.file;\n      if (!issuesByFile.has(file)) {\n        issuesByFile.set(file, []);\n      }\n      issuesByFile.get(file)!.push(issue);\n    });\n\n    // ファイルごとにアノテーションを生成\n    issuesByFile.forEach((fileIssues, file) => {\n      lines.push(`## File: ${file}`);\n      lines.push('');\n      \n      // 行番号でソート\n      fileIssues.sort((a, b) => (a.location?.startLine || 0) - (b.location?.startLine || 0));\n      \n      fileIssues.forEach(issue => {\n        lines.push(`### Line ${issue.location?.startLine || 0}: ${issue.type}`);\n        lines.push('');\n        lines.push('```');\n        lines.push(this.generateAnnotation(issue, { format: 'inline' }));\n        lines.push('```');\n        lines.push('');\n        \n        if (issue.recommendation) {\n          lines.push(`**Recommendation**: ${issue.recommendation}`);\n          lines.push('');\n        }\n      });\n    });\n\n    return lines.join('\\n');\n  }\n\n  /**\n   * 重要度タグを取得\n   */\n  private getSeverityTag(severity: Severity | SeverityLevel): string {\n    const tags: Record<Severity, string> = {\n      [Severity.CRITICAL]: 'CRITICAL',\n      [Severity.HIGH]: 'HIGH',\n      [Severity.MEDIUM]: 'MEDIUM',\n      [Severity.LOW]: 'LOW',\n      [Severity.INFO]: 'INFO'\n    };\n    return tags[severity as Severity] || 'UNKNOWN';\n  }\n\n  /**\n   * データフローをインライン形式でフォーマット\n   */\n  private formatDataFlowInline(dataFlow: DataFlow): string {\n    const source = `${dataFlow.source.location.file}:${dataFlow.source.location.startLine}`;\n    const sink = `${dataFlow.sink.location.file}:${dataFlow.sink.location.startLine}`;\n    return `(Source: ${source} -> Sink: ${sink})`;\n  }\n\n  /**\n   * データフローをブロック形式でフォーマット\n   */\n  private formatDataFlowBlock(dataFlow: DataFlow): string[] {\n    const lines: string[] = [];\n\n    // Source\n    lines.push(` * Source: ${dataFlow.source.type}`);\n    lines.push(` *   Location: ${dataFlow.source.location.file}:${dataFlow.source.location.startLine}`);\n\n    // Path\n    if (dataFlow.path && dataFlow.path.length > 0) {\n      lines.push(` * Path:`);\n      dataFlow.path.forEach((step, index) => {\n        lines.push(` *   ${index + 1}. ${step.description || step.type}`);\n        lines.push(` *      ${step.location.file}:${step.location.startLine}`);\n      });\n    }\n\n    // Sink\n    lines.push(` * Sink: ${dataFlow.sink.type}`);\n    lines.push(` *   Location: ${dataFlow.sink.location.file}:${dataFlow.sink.location.startLine}`);\n\n    return lines;\n  }\n\n  /**\n   * ファイル拡張子に基づいてコメントスタイルを決定\n   */\n  getCommentStyle(filePath: string): { inline: string; blockStart?: string; blockEnd?: string } {\n    const ext = filePath.split('.').pop()?.toLowerCase() || '';\n    \n    const styles: Record<string, { inline: string; blockStart?: string; blockEnd?: string }> = {\n      // C系言語\n      'js': { inline: '//', blockStart: '/*', blockEnd: '*/' },\n      'jsx': { inline: '//', blockStart: '/*', blockEnd: '*/' },\n      'ts': { inline: '//', blockStart: '/*', blockEnd: '*/' },\n      'tsx': { inline: '//', blockStart: '/*', blockEnd: '*/' },\n      'java': { inline: '//', blockStart: '/*', blockEnd: '*/' },\n      'c': { inline: '//', blockStart: '/*', blockEnd: '*/' },\n      'cpp': { inline: '//', blockStart: '/*', blockEnd: '*/' },\n      'cs': { inline: '//', blockStart: '/*', blockEnd: '*/' },\n      'go': { inline: '//', blockStart: '/*', blockEnd: '*/' },\n      'rust': { inline: '//', blockStart: '/*', blockEnd: '*/' },\n      'php': { inline: '//', blockStart: '/*', blockEnd: '*/' },\n      \n      // スクリプト言語\n      'py': { inline: '#', blockStart: '\"\"\"', blockEnd: '\"\"\"' },\n      'rb': { inline: '#', blockStart: '=begin', blockEnd: '=end' },\n      'sh': { inline: '#' },\n      'bash': { inline: '#' },\n      \n      // マークアップ\n      'html': { inline: '<!--', blockEnd: '-->' },\n      'xml': { inline: '<!--', blockEnd: '-->' },\n      'vue': { inline: '<!--', blockEnd: '-->' },\n      \n      // その他\n      'sql': { inline: '--', blockStart: '/*', blockEnd: '*/' },\n      'yaml': { inline: '#' },\n      'yml': { inline: '#' }\n    };\n\n    return styles[ext] || { inline: '//' };\n  }\n\n  /**\n   * 言語に応じたアノテーションを生成\n   */\n  generateLanguageSpecificAnnotation(\n    issue: Issue,\n    filePath: string,\n    options?: AnnotationOptions\n  ): string {\n    const commentStyle = this.getCommentStyle(filePath);\n    const baseAnnotation = this.generateAnnotation(issue, options);\n\n    // インラインコメントスタイルに変換\n    if (baseAnnotation.startsWith('//')) {\n      return baseAnnotation.replace('//', commentStyle.inline);\n    }\n\n    // ブロックコメントスタイルに変換\n    if (baseAnnotation.startsWith('/**') && commentStyle.blockStart) {\n      let converted = baseAnnotation.replace('/**', commentStyle.blockStart);\n      if (commentStyle.blockEnd) {\n        converted = converted.replace('*/', commentStyle.blockEnd);\n      }\n      return converted;\n    }\n\n    return baseAnnotation;\n  }\n}"],"version":3}