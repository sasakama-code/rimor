{"file":"/Users/sasakama/Projects/Rimor/src/analyzers/dependency-analysis/package-analyzer.ts","mappings":";AAAA;;;GAGG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,uCAAyB;AACzB,2CAA6B;AAC7B,2CAA6B;AA0B7B,MAAa,eAAe;IACT,gBAAgB,GAAG,IAAI,GAAG,CAAC;QAC1C,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ;QAC/D,KAAK,EAAE,aAAa,EAAE,eAAe,EAAE,SAAS,EAAE,QAAQ;QAC1D,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ;QAC7D,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM;KACtD,CAAC,CAAC;IAEH;;OAEG;IACH,KAAK,CAAC,oBAAoB,CAAC,WAAmB;QAC5C,oBAAoB;QACpB,IAAI,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,EAAE,CAAC;YACvD,OAAO,MAAM,CAAC;QAChB,CAAC;QAED,yBAAyB;QACzB,IAAI,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC,EAAE,CAAC;YAC5D,OAAO,MAAM,CAAC;QAChB,CAAC;QAED,2BAA2B;QAC3B,IAAI,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,mBAAmB,CAAC,CAAC,EAAE,CAAC;YAC/D,OAAO,KAAK,CAAC;QACf,CAAC;QAED,YAAY;QACZ,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,kBAAkB,CAAC,WAAmB;QAC1C,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;QAE/D,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE,CAAC;YACpC,OAAO;gBACL,IAAI,EAAE,SAAS;gBACf,OAAO,EAAE,SAAS;gBAClB,YAAY,EAAE,EAAE;gBAChB,eAAe,EAAE,EAAE;gBACnB,gBAAgB,EAAE,EAAE;gBACpB,eAAe,EAAE,EAAE;aACpB,CAAC;QACJ,CAAC;QAED,IAAI,CAAC;YACH,MAAM,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;YAC1D,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAwB,CAAC;YAE/D,MAAM,YAAY,GAAG,WAAW,CAAC,YAAY,IAAI,EAAE,CAAC;YACpD,MAAM,eAAe,GAAG,WAAW,CAAC,eAAe,IAAI,EAAE,CAAC;YAC1D,MAAM,gBAAgB,GAAG,WAAW,CAAC,gBAAgB,IAAI,EAAE,CAAC;YAE5D,MAAM,eAAe,GAAG;gBACtB,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;gBAC5B,GAAG,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;gBAC/B,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;aACjC,CAAC;YAEF,OAAO;gBACL,IAAI,EAAE,WAAW,CAAC,IAAI;gBACtB,OAAO,EAAE,WAAW,CAAC,OAAO;gBAC5B,YAAY;gBACZ,eAAe;gBACf,gBAAgB;gBAChB,eAAe;aAChB,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,wBAAwB;YACxB,OAAO;gBACL,IAAI,EAAE,SAAS;gBACf,OAAO,EAAE,SAAS;gBAClB,YAAY,EAAE,EAAE;gBAChB,eAAe,EAAE,EAAE;gBACnB,gBAAgB,EAAE,EAAE;gBACpB,eAAe,EAAE,EAAE;aACpB,CAAC;QACJ,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,sBAAsB,CAAC,WAAmB;QAC9C,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;QACnE,MAAM,OAAO,GAAG,eAAe,CAAC,eAAe,CAAC;QAEhD,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACzB,OAAO,EAAE,CAAC;QACZ,CAAC;QAED,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QAC9D,MAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAEjE,OAAO,UAAU,CAAC;IACpB,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,uBAAuB,CAAC,WAAmB;QAC/C,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;QACnE,MAAM,aAAa,GAAG,IAAI,GAAG,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;QAE/D,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QAC9D,MAAM,WAAW,GAAa,EAAE,CAAC;QAEjC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACzB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC/D,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACxB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC;IACrB,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,yBAAyB,CAAC,WAAmB;QACjD,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;QACnE,MAAM,OAAO,GAA8B,EAAE,CAAC;QAE9C,MAAM,OAAO,GAAG;YACd,GAAG,eAAe,CAAC,YAAY;YAC/B,GAAG,eAAe,CAAC,eAAe;YAClC,GAAG,eAAe,CAAC,gBAAgB;SACpC,CAAC;QAEF,KAAK,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;YACrD,MAAM,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YACvD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvB,CAAC;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,cAAc,CAAC,WAAmB;QACtC,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAkB,CAAC;QAE3C,gBAAgB;QAChB,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QACzD,IAAI,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC;YAChC,IAAI,CAAC;gBACH,MAAM,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;gBACvD,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBAC3C,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE;oBAC/B,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;YACL,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,yBAAyB;YAC3B,CAAC;QACH,CAAC;QAED,wCAAwC;QACxC,IAAI,QAAQ,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC;YACxB,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,mBAAmB,CAAC,CAAC;YACpE,IAAI,EAAE,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE,CAAC;gBACnC,IAAI,CAAC;oBACH,MAAM,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;oBAC1D,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAoB,CAAC;oBAC3D,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;oBACpD,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE;wBACjC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;oBAC9B,CAAC,CAAC,CAAC;gBACL,CAAC;gBAAC,OAAO,KAAK,EAAE,CAAC;oBACf,iCAAiC;gBACnC,CAAC;YACH,CAAC;QACH,CAAC;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED;;;OAGG;IACK,KAAK,CAAC,gBAAgB,CAAC,WAAmB;QAChD,MAAM,YAAY,GAAG,IAAI,GAAG,EAAU,CAAC;QACvC,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE;YAC5D,GAAG,EAAE,WAAW;YAChB,MAAM,EAAE,CAAC,iBAAiB,EAAE,SAAS,EAAE,UAAU,CAAC;SACnD,CAAC,CAAC;QAEH,KAAK,MAAM,IAAI,IAAI,WAAW,EAAE,CAAC;YAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAC9C,IAAI,CAAC;gBACH,MAAM,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;gBACnD,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;gBAC7C,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBACpB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;wBACnE,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC7C,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,iBAAiB;YACnB,CAAC;QACH,CAAC;QAED,OAAO,YAAY,CAAC;IACtB,CAAC;IAED;;;OAGG;IACK,cAAc,CAAC,OAAe;QACpC,MAAM,OAAO,GAAG,IAAI,GAAG,EAAU,CAAC;QAElC,cAAc;QACd,MAAM,WAAW,GAAG,8CAA8C,CAAC;QACnE,IAAI,KAAK,CAAC;QACV,OAAO,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;YACpD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC;QAED,oBAAoB;QACpB,MAAM,YAAY,GAAG,uCAAuC,CAAC;QAC7D,OAAO,CAAC,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;YACrD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC;QAED,kBAAkB;QAClB,MAAM,kBAAkB,GAAG,sCAAsC,CAAC;QAClE,OAAO,CAAC,KAAK,GAAG,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;YAC3D,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;;;OAGG;IACK,gBAAgB,CAAC,UAAkB;QACzC,OAAO,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC;YAC3B,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC;YAC5B,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAED;;;OAGG;IACK,cAAc,CAAC,UAAkB;QACvC,iBAAiB;QACjB,IAAI,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;YAC/B,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACpC,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrC,CAAC;QACD,WAAW;QACX,OAAO,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC;IAED;;;OAGG;IACK,oBAAoB,CAAC,GAAW,EAAE,OAAe;QACvD,IAAI,IAAmD,CAAC;QACxD,IAAI,OAAO,GAAG,KAAK,CAAC;QAEpB,IAAI,OAAO,KAAK,GAAG,IAAI,OAAO,KAAK,QAAQ,EAAE,CAAC;YAC5C,IAAI,GAAG,KAAK,CAAC;YACb,OAAO,GAAG,IAAI,CAAC;QACjB,CAAC;aAAM,IAAI,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;YACnC,IAAI,GAAG,OAAO,CAAC;YACf,OAAO,GAAG,KAAK,CAAC;QAClB,CAAC;aAAM,IAAI,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;YACnC,IAAI,GAAG,OAAO,CAAC;YACf,OAAO,GAAG,KAAK,CAAC;QAClB,CAAC;aAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;YACpF,IAAI,GAAG,OAAO,CAAC;YACf,OAAO,GAAG,IAAI,CAAC;QACjB,CAAC;aAAM,CAAC;YACN,IAAI,GAAG,OAAO,CAAC;YACf,OAAO,GAAG,KAAK,CAAC;QAClB,CAAC;QAED,OAAO;YACL,OAAO,EAAE,GAAG;YACZ,UAAU,EAAE,OAAO;YACnB,IAAI;YACJ,OAAO;SACR,CAAC;IACJ,CAAC;IAED;;;OAGG;IACK,aAAa,CAAC,OAAe;QACnC,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAkB,CAAC;QAC3C,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,cAAc,GAAG,EAAE,CAAC;QAExB,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YACzB,WAAW;YACX,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;gBACxD,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAC/D,CAAC;YACD,UAAU;iBACL,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC;gBAC5C,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBACtE,IAAI,cAAc,EAAE,CAAC;oBACnB,QAAQ,CAAC,GAAG,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;oBACtC,cAAc,GAAG,EAAE,CAAC;gBACtB,CAAC;YACH,CAAC;QACH,CAAC;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED;;;OAGG;IACK,gBAAgB,CAAC,WAA4B;QACnD,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAkB,CAAC;QAE3C,IAAI,WAAW,CAAC,QAAQ,EAAE,CAAC;YACzB,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;gBAC/D,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE,CAAC;oBACnD,MAAM,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;oBAClD,MAAM,WAAW,GAAG,IAA6B,CAAC;oBAClD,IAAI,WAAW,EAAE,OAAO,EAAE,CAAC;wBACzB,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC;oBAC1C,CAAC;gBACH,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,wBAAwB;QACxB,IAAI,WAAW,CAAC,YAAY,EAAE,CAAC;YAC7B,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;gBAChE,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;oBAClB,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gBACnC,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF;AAhWD,0CAgWC","names":[],"sources":["/Users/sasakama/Projects/Rimor/src/analyzers/dependency-analysis/package-analyzer.ts"],"sourcesContent":["/**\n * パッケージ分析クラス\n * package.json、lockファイル、依存関係の管理を担当\n */\n\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as glob from 'glob';\nimport {\n  ExtendedPackageJson,\n  VersionConstraint,\n  PackageLockJson,\n  PackageLockDependency,\n  YarnLockEntry\n} from '../dependency-types';\nimport { PackageJsonConfig } from '../../core/types';\n\nexport interface PackageAnalysisResult {\n  name?: string;\n  version?: string;\n  dependencies: Record<string, string>;\n  devDependencies: Record<string, string>;\n  peerDependencies: Record<string, string>;\n  allDependencies: string[];\n}\n\nexport interface VersionConstraintResult {\n  package: string;\n  constraint: string;\n  type: 'exact' | 'caret' | 'tilde' | 'range' | 'any';\n  isRisky: boolean;\n}\n\nexport class PackageAnalyzer {\n  private readonly BUILT_IN_MODULES = new Set([\n    'fs', 'path', 'http', 'https', 'crypto', 'os', 'util', 'stream',\n    'url', 'querystring', 'child_process', 'cluster', 'events',\n    'buffer', 'process', 'console', 'module', 'require', 'assert',\n    'net', 'tls', 'dns', 'readline', 'repl', 'vm', 'zlib'\n  ]);\n\n  /**\n   * パッケージマネージャーを検出\n   */\n  async detectPackageManager(projectPath: string): Promise<string> {\n    // yarn.lockがあればyarn\n    if (fs.existsSync(path.join(projectPath, 'yarn.lock'))) {\n      return 'yarn';\n    }\n    \n    // pnpm-lock.yamlがあればpnpm\n    if (fs.existsSync(path.join(projectPath, 'pnpm-lock.yaml'))) {\n      return 'pnpm';\n    }\n    \n    // package-lock.jsonがあればnpm\n    if (fs.existsSync(path.join(projectPath, 'package-lock.json'))) {\n      return 'npm';\n    }\n    \n    // デフォルトはnpm\n    return 'npm';\n  }\n\n  /**\n   * package.jsonを解析\n   */\n  async analyzePackageJson(projectPath: string): Promise<PackageAnalysisResult> {\n    const packageJsonPath = path.join(projectPath, 'package.json');\n    \n    if (!fs.existsSync(packageJsonPath)) {\n      return {\n        name: undefined,\n        version: undefined,\n        dependencies: {},\n        devDependencies: {},\n        peerDependencies: {},\n        allDependencies: []\n      };\n    }\n\n    try {\n      const content = fs.readFileSync(packageJsonPath, 'utf-8');\n      const packageJson = JSON.parse(content) as ExtendedPackageJson;\n      \n      const dependencies = packageJson.dependencies || {};\n      const devDependencies = packageJson.devDependencies || {};\n      const peerDependencies = packageJson.peerDependencies || {};\n      \n      const allDependencies = [\n        ...Object.keys(dependencies),\n        ...Object.keys(devDependencies),\n        ...Object.keys(peerDependencies)\n      ];\n\n      return {\n        name: packageJson.name,\n        version: packageJson.version,\n        dependencies,\n        devDependencies,\n        peerDependencies,\n        allDependencies\n      };\n    } catch (error) {\n      // パースエラーの場合は空のオブジェクトを返す\n      return {\n        name: undefined,\n        version: undefined,\n        dependencies: {},\n        devDependencies: {},\n        peerDependencies: {},\n        allDependencies: []\n      };\n    }\n  }\n\n  /**\n   * 未使用の依存関係を検出\n   */\n  async findUnusedDependencies(projectPath: string): Promise<string[]> {\n    const packageAnalysis = await this.analyzePackageJson(projectPath);\n    const allDeps = packageAnalysis.allDependencies;\n    \n    if (allDeps.length === 0) {\n      return [];\n    }\n\n    const usedPackages = await this.findUsedPackages(projectPath);\n    const unusedDeps = allDeps.filter(dep => !usedPackages.has(dep));\n    \n    return unusedDeps;\n  }\n\n  /**\n   * 不足している依存関係を検出\n   */\n  async findMissingDependencies(projectPath: string): Promise<string[]> {\n    const packageAnalysis = await this.analyzePackageJson(projectPath);\n    const installedDeps = new Set(packageAnalysis.allDependencies);\n    \n    const usedPackages = await this.findUsedPackages(projectPath);\n    const missingDeps: string[] = [];\n    \n    usedPackages.forEach(pkg => {\n      if (!installedDeps.has(pkg) && !this.BUILT_IN_MODULES.has(pkg)) {\n        missingDeps.push(pkg);\n      }\n    });\n    \n    return missingDeps;\n  }\n\n  /**\n   * バージョン制約を分析\n   */\n  async analyzeVersionConstraints(projectPath: string): Promise<VersionConstraintResult[]> {\n    const packageAnalysis = await this.analyzePackageJson(projectPath);\n    const results: VersionConstraintResult[] = [];\n    \n    const allDeps = {\n      ...packageAnalysis.dependencies,\n      ...packageAnalysis.devDependencies,\n      ...packageAnalysis.peerDependencies\n    };\n\n    for (const [pkg, version] of Object.entries(allDeps)) {\n      const result = this.analyzeVersionString(pkg, version);\n      results.push(result);\n    }\n\n    return results;\n  }\n\n  /**\n   * lockファイルを解析\n   */\n  async parseLockFiles(projectPath: string): Promise<Map<string, string>> {\n    const lockInfo = new Map<string, string>();\n\n    // yarn.lockをパース\n    const yarnLockPath = path.join(projectPath, 'yarn.lock');\n    if (fs.existsSync(yarnLockPath)) {\n      try {\n        const content = fs.readFileSync(yarnLockPath, 'utf-8');\n        const parsed = this.parseYarnLock(content);\n        parsed.forEach((version, name) => {\n          lockInfo.set(name, version);\n        });\n      } catch (error) {\n        // yarn.lockの解析に失敗した場合は無視\n      }\n    }\n\n    // package-lock.jsonをパース（yarn.lockがない場合）\n    if (lockInfo.size === 0) {\n      const packageLockPath = path.join(projectPath, 'package-lock.json');\n      if (fs.existsSync(packageLockPath)) {\n        try {\n          const content = fs.readFileSync(packageLockPath, 'utf-8');\n          const packageLock = JSON.parse(content) as PackageLockJson;\n          const packages = this.parsePackageLock(packageLock);\n          packages.forEach((version, name) => {\n            lockInfo.set(name, version);\n          });\n        } catch (error) {\n          // package-lock.jsonの解析に失敗した場合は無視\n        }\n      }\n    }\n\n    return lockInfo;\n  }\n\n  /**\n   * プロジェクト内で使用されているパッケージを検出\n   * @private\n   */\n  private async findUsedPackages(projectPath: string): Promise<Set<string>> {\n    const usedPackages = new Set<string>();\n    const sourceFiles = glob.sync('**/*.{js,jsx,ts,tsx,mjs,cjs}', {\n      cwd: projectPath,\n      ignore: ['node_modules/**', 'dist/**', 'build/**']\n    });\n\n    for (const file of sourceFiles) {\n      const filePath = path.join(projectPath, file);\n      try {\n        const content = fs.readFileSync(filePath, 'utf-8');\n        const imports = this.extractImports(content);\n        imports.forEach(imp => {\n          if (!this.isRelativeImport(imp) && !this.BUILT_IN_MODULES.has(imp)) {\n            usedPackages.add(this.getPackageName(imp));\n          }\n        });\n      } catch (error) {\n        // ファイル読み込みエラーは無視\n      }\n    }\n\n    return usedPackages;\n  }\n\n  /**\n   * コードからimport/requireを抽出\n   * @private\n   */\n  private extractImports(content: string): Set<string> {\n    const imports = new Set<string>();\n    \n    // ES6 imports\n    const importRegex = /import\\s+(?:.*?\\s+from\\s+)?['\"]([^'\"]+)['\"]/g;\n    let match;\n    while ((match = importRegex.exec(content)) !== null) {\n      imports.add(match[1]);\n    }\n    \n    // CommonJS requires\n    const requireRegex = /require\\s*\\(\\s*['\"]([^'\"]+)['\"]\\s*\\)/g;\n    while ((match = requireRegex.exec(content)) !== null) {\n      imports.add(match[1]);\n    }\n    \n    // Dynamic imports\n    const dynamicImportRegex = /import\\s*\\(\\s*['\"]([^'\"]+)['\"]\\s*\\)/g;\n    while ((match = dynamicImportRegex.exec(content)) !== null) {\n      imports.add(match[1]);\n    }\n\n    return imports;\n  }\n\n  /**\n   * 相対インポートかどうかを判定\n   * @private\n   */\n  private isRelativeImport(importPath: string): boolean {\n    return importPath.startsWith('./') || \n           importPath.startsWith('../') || \n           importPath.startsWith('/');\n  }\n\n  /**\n   * インポートパスからパッケージ名を取得\n   * @private\n   */\n  private getPackageName(importPath: string): string {\n    // スコープ付きパッケージの場合\n    if (importPath.startsWith('@')) {\n      const parts = importPath.split('/');\n      return parts.slice(0, 2).join('/');\n    }\n    // 通常のパッケージ\n    return importPath.split('/')[0];\n  }\n\n  /**\n   * バージョン文字列を分析\n   * @private\n   */\n  private analyzeVersionString(pkg: string, version: string): VersionConstraintResult {\n    let type: 'exact' | 'caret' | 'tilde' | 'range' | 'any';\n    let isRisky = false;\n\n    if (version === '*' || version === 'latest') {\n      type = 'any';\n      isRisky = true;\n    } else if (version.startsWith('^')) {\n      type = 'caret';\n      isRisky = false;\n    } else if (version.startsWith('~')) {\n      type = 'tilde';\n      isRisky = false;\n    } else if (version.includes('>') || version.includes('<') || version.includes('||')) {\n      type = 'range';\n      isRisky = true;\n    } else {\n      type = 'exact';\n      isRisky = false;\n    }\n\n    return {\n      package: pkg,\n      constraint: version,\n      type,\n      isRisky\n    };\n  }\n\n  /**\n   * yarn.lockをパース\n   * @private\n   */\n  private parseYarnLock(content: string): Map<string, string> {\n    const packages = new Map<string, string>();\n    const lines = content.split('\\n');\n    let currentPackage = '';\n    \n    for (const line of lines) {\n      // パッケージ名の行\n      if (line && !line.startsWith(' ') && line.includes('@')) {\n        currentPackage = line.split('@')[0].trim().replace(/\"/g, '');\n      }\n      // バージョンの行\n      else if (line.trim().startsWith('version ')) {\n        const version = line.trim().replace('version ', '').replace(/\"/g, '');\n        if (currentPackage) {\n          packages.set(currentPackage, version);\n          currentPackage = '';\n        }\n      }\n    }\n    \n    return packages;\n  }\n\n  /**\n   * package-lock.jsonをパース\n   * @private\n   */\n  private parsePackageLock(packageLock: PackageLockJson): Map<string, string> {\n    const packages = new Map<string, string>();\n    \n    if (packageLock.packages) {\n      Object.entries(packageLock.packages).forEach(([pkgPath, info]) => {\n        if (pkgPath && pkgPath.startsWith('node_modules/')) {\n          const name = pkgPath.replace('node_modules/', '');\n          const packageInfo = info as PackageLockDependency;\n          if (packageInfo?.version) {\n            packages.set(name, packageInfo.version);\n          }\n        }\n      });\n    }\n    \n    // 旧形式のpackage-lock.json\n    if (packageLock.dependencies) {\n      Object.entries(packageLock.dependencies).forEach(([name, info]) => {\n        if (info?.version) {\n          packages.set(name, info.version);\n        }\n      });\n    }\n    \n    return packages;\n  }\n}"],"version":3}