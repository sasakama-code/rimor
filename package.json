{
  "name": "rimor",
  "version": "0.8.0",
  "description": "テスト品質監査ツール - DIベースアーキテクチャと型ベースセキュリティ解析によるテストの質の検証",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "bin": {
    "rimor": "dist/index.js"
  },
  "scripts": {
    "build": "tsc && npm run copy:templates && npm run ensure:testing && npm run set:permissions && npm run verify:build",
    "build:clean": "rm -rf dist && npm run build",
    "build:simple": "tsc && npm run copy:templates && npm run ensure:testing && npm run set:permissions",
    "build:full": "rm -rf dist && tsc -p config/typescript/tsconfig.build.json && npm run copy:templates && npm run ensure:testing && npm run set:permissions && npm run verify:build",
    "build:ci": "tsc -p config/typescript/tsconfig.build.json && npm run copy:templates && npm run ensure:testing && npm run set:permissions && npm run verify:build",
    "build:fast": "tsc --incremental && npm run copy:templates && npm run ensure:testing && npm run set:permissions",
    "build:watch": "tsc --watch --incremental",
    "build:testing": "mkdir -p dist/testing && npx tsc --project config/typescript/tsconfig.testing.json",
    "copy:templates": "mkdir -p dist/reporting/templates && cp -r src/reporting/templates/*.hbs dist/reporting/templates/",
    "ensure:testing": "mkdir -p dist/testing && npx tsc src/testing/error-context.ts src/testing/ci-traceability.ts src/testing/ai-error-formatter.ts src/testing/jest-ai-reporter.ts --outDir dist --module commonjs --target ES2022 --esModuleInterop --skipLibCheck --resolveJsonModule --allowSyntheticDefaultImports",
    "set:permissions": "chmod +x dist/index.js",
    "verify:build": "node scripts/verify-build.js",
    "lint": "npx tsc --noEmit",
    "lint:naming": "node scripts/check-naming-conventions.js",
    "lint:naming:verbose": "node scripts/check-naming-conventions.js --verbose",
    "lint:naming:fix": "node scripts/check-naming-conventions.js --fix",
    "check:naming": "node scripts/check-naming-conventions.js",
    "test": "NODE_OPTIONS=\"--max-old-space-size=2048\" jest --config=config/jest/jest.config.mjs --forceExit --runInBand --detectOpenHandles=false --testPathIgnorePatterns=\"test/performance/\" --testPathIgnorePatterns=\"test/integration/\"",
    "test:quick": "NODE_OPTIONS=\"--max-old-space-size=768\" jest --config=config/jest/jest.config.mjs test/utils/ test/scoring/ --forceExit --runInBand",
    "test:unit": "NODE_OPTIONS=\"--max-old-space-size=1024\" jest --config=config/jest/jest.config.mjs test/ --testPathIgnorePatterns=test/integration/ --testPathIgnorePatterns=test/performance/ --forceExit --runInBand",
    "test:integration": "NODE_OPTIONS=\"--max-old-space-size=1536\" jest --config=config/jest/jest.config.mjs test/integration/ --forceExit --runInBand --maxWorkers=1",
    "test:performance": "NODE_OPTIONS=\"--max-old-space-size=2048\" jest --config=config/jest/jest.config.mjs test/performance/ --forceExit --runInBand --maxWorkers=1",
    "test:full-suite": "npm run test:unit && npm run test:integration",
    "test:coverage": "NODE_OPTIONS=\"--max-old-space-size=2048\" jest --config=config/jest/jest.config.mjs --coverage --collectCoverageFrom=\"src/**/*.ts\" --coverageDirectory=\"coverage\" --coverageReporters=\"text\" \"text-summary\" \"lcov\" \"html\"",
    "test:coverage:ci": "NODE_OPTIONS=\"--max-old-space-size=2048\" jest --config=config/jest/jest.config.mjs --coverage --collectCoverageFrom=\"src/**/*.ts\" --coverageDirectory=\"coverage\" --coverageReporters=\"text-summary\" \"lcov\" --coverageThreshold='{\"global\":{\"branches\":85,\"functions\":98,\"lines\":95,\"statements\":95}}'",
    "test:fast": "DISABLE_AI_REPORTER=true NODE_OPTIONS=\"--max-old-space-size=1024\" jest --config=config/jest/jest.config.fast.js",
    "test:watch": "DISABLE_AI_REPORTER=true NODE_OPTIONS=\"--max-old-space-size=1024\" jest --config=config/jest/jest.config.fast.js --watch",
    "test:specific": "DISABLE_AI_REPORTER=true NODE_OPTIONS=\"--max-old-space-size=1024\" jest --config=config/jest/jest.config.fast.js --testNamePattern",
    "test:shard1": "NODE_OPTIONS=\"--max-old-space-size=1024\" jest --config=config/jest/jest.config.mjs --forceExit --runInBand --detectOpenHandles=false --shard=1/3",
    "test:shard2": "NODE_OPTIONS=\"--max-old-space-size=1024\" jest --config=config/jest/jest.config.mjs --forceExit --runInBand --detectOpenHandles=false --shard=2/3",
    "test:shard3": "NODE_OPTIONS=\"--max-old-space-size=1024\" jest --config=config/jest/jest.config.mjs --forceExit --runInBand --detectOpenHandles=false --shard=3/3",
    "test:shards": "npm run test:shard1 && npm run test:shard2 && npm run test:shard3",
    "test:core-basic": "NODE_OPTIONS=\"--max-old-space-size=768\" jest --config=config/jest/jest.config.mjs test/core/ test/utils/ --testNamePattern=\"^((?!performance|Performance|engine|Engine|Unified).)*$\" --forceExit --runInBand",
    "test:core-heavy": "NODE_OPTIONS=\"--max-old-space-size=1024\" jest --config=config/jest/jest.config.mjs test/core/performanceMonitor.test.ts test/core/engine.test.ts test/core/UnifiedAnalysisEngine.test.ts test/core/UnifiedPluginManager.test.ts --forceExit --runInBand",
    "test:core-group": "npm run test:core-basic && npm run test:core-heavy",
    "test:security-basic": "NODE_OPTIONS=\"--max-old-space-size=768\" jest --config=config/jest/jest.config.mjs test/security/ --testPathIgnorePatterns=\"parallel-type-checker|flow.test|AccuracyEvaluationSystem\" --forceExit --runInBand",
    "test:security-advanced": "NODE_OPTIONS=\"--max-old-space-size=1024\" jest --config=config/jest/jest.config.mjs test/security/checker/parallel-type-checker.test.ts test/security/analysis/flow.test.ts test/security/validation/AccuracyEvaluationSystem.test.ts --forceExit --runInBand",
    "test:security-group": "npm run test:security-basic",
    "test:dictionary-group": "NODE_OPTIONS=\"--max-old-space-size=768\" jest --config=config/jest/jest.config.mjs test/dictionary/ test/analyzers/ --forceExit --runInBand",
    "test:scoring-group": "NODE_OPTIONS=\"--max-old-space-size=768\" jest --config=config/jest/jest.config.mjs test/scoring/ test/fixtures/ --forceExit --runInBand",
    "test:cli-group": "NODE_OPTIONS=\"--max-old-space-size=768\" jest --config=config/jest/jest.config.mjs test/cli/ test/interactive/ --forceExit --runInBand",
    "test:plugins-group": "NODE_OPTIONS=\"--max-old-space-size=768\" jest --config=config/jest/jest.config.mjs test/plugins/ test/ai-output/ --forceExit --runInBand",
    "test:groups": "npm run test:core-group && npm run test:security-group && npm run test:dictionary-group && npm run test:scoring-group && npm run test:cli-group && npm run test:plugins-group",
    "analyze": "node dist/index.js analyze",
    "analyze:json": "node dist/index.js analyze --format=json",
    "analyze:verbose": "node dist/index.js analyze --verbose",
    "analyze:src": "node dist/index.js analyze ./src",
    "analyze:src:json": "node dist/index.js analyze ./src --format=json",
    "bootstrap:init": "node dist/index.js bootstrap init",
    "bootstrap:status": "node dist/index.js bootstrap status",
    "dev": "npm run build && npm run analyze:src",
    "full-check": "npm run security-check && npm run analyze:src",
    "security-check": "node scripts/security-check.js",
    "pre-release-check": "bash scripts/pre-release-check.sh",
    "release-ready": "node scripts/release-health-check.js",
    "health-check": "node scripts/release-health-check.js",
    "benchmark:arxiv-paper": "NODE_OPTIONS=\"--max-old-space-size=4096\" ts-node scripts/benchmark-arxiv-paper.ts",
    "benchmark:external": "NODE_OPTIONS=\"--max-old-space-size=6144\" node dist/index.js benchmark external",
    "benchmark:external:tier1": "NODE_OPTIONS=\"--max-old-space-size=6144\" node dist/index.js benchmark external --tier=1",
    "benchmark:external:tier2": "NODE_OPTIONS=\"--max-old-space-size=6144\" node dist/index.js benchmark external --tier=2",
    "benchmark:external:quick": "NODE_OPTIONS=\"--max-old-space-size=4096\" node dist/index.js benchmark external --quick --parallel",
    "benchmark:external:typescript": "NODE_OPTIONS=\"--max-old-space-size=4096\" node dist/index.js benchmark external typescript",
    "benchmark:external:verbose": "NODE_OPTIONS=\"--max-old-space-size=6144\" node dist/index.js benchmark external --verbose --iterations=3",
    "dev:test": "DISABLE_AI_REPORTER=true jest --config=config/jest/jest.config.mjs --watch",
    "ci:local": "CI=true npm run build:full && CI=true npm test",
    "clean:all": "rm -rf dist node_modules coverage temp test-errors-ai.* .jest-cache",
    "docs:build": "typedoc --options config/typedoc.json",
    "docs:clean": "rm -rf docs/api docs/api-markdown",
    "docs:build:markdown": "typedoc --options config/typedoc.json --plugin typedoc-plugin-markdown --out docs/api-markdown",
    "docs:serve": "npx http-server docs/api -p 8080 -o",
    "type:coverage": "node scripts/type-coverage.js",
    "type:check-circular": "node scripts/check-circular-deps.js",
    "type:convert-any": "node scripts/convert-any-to-unknown.js",
    "type:convert-any:dry": "node scripts/convert-any-to-unknown.js src --dry-run",
    "type:report": "npm run type:coverage && npm run type:check-circular"
  },
  "keywords": [
    "testing",
    "quality",
    "static-analysis",
    "test-quality",
    "rimor",
    "security",
    "taint-analysis"
  ],
  "author": "Rimor Development Team",
  "license": "MIT",
  "dependencies": {
    "@babel/parser": "^7.28.0",
    "@babel/traverse": "^7.28.0",
    "@babel/types": "^7.28.2",
    "@types/glob": "^8.1.0",
    "chalk": "^5.3.0",
    "commander": "^12.0.0",
    "franc": "^6.2.0",
    "glob": "^10.4.5",
    "handlebars": "^4.7.8",
    "inquirer": "^12.9.3",
    "inversify": "^7.6.1",
    "js-yaml": "^4.1.0",
    "kuromoji": "^0.1.2",
    "ml-kmeans": "^6.0.0",
    "natural": "^6.10.4",
    "reflect-metadata": "^0.2.2",
    "tree-sitter": "^0.21.1",
    "tree-sitter-javascript": "^0.23.1",
    "tree-sitter-typescript": "^0.23.2",
    "typescript": "^5.0.0",
    "yargs": "^17.7.0"
  },
  "devDependencies": {
    "@types/express": "^4.17.21",
    "@types/inquirer": "^9.0.7",
    "@types/jest": "^29.5.0",
    "@types/js-yaml": "^4.0.9",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/natural": "^5.1.2",
    "@types/node": "^20.0.0",
    "@types/supertest": "^2.0.16",
    "@types/yargs": "^17.0.32",
    "express": "^4.18.2",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "jest-util": "^29.7.0",
    "jsonwebtoken": "^9.0.2",
    "lint-staged": "^16.1.5",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-node": "^10.9.2",
    "typedoc": "^0.28.10",
    "typedoc-plugin-markdown": "^4.8.1",
    "typedoc-plugin-mermaid": "^1.12.0"
  },
  "engines": {
    "node": ">=16.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/rimor-project/rimor.git"
  },
  "bugs": {
    "url": "https://github.com/rimor-project/rimor/issues"
  },
  "homepage": "https://github.com/rimor-project/rimor#readme"
}
